---
title: "Logistic regression"
format:
  html:
    toc: true
    html-math-method: katex
    css: style.css  
    theme:
      light: cosmo
      dark: [cosmo, theme-dark.scss]
execute: 
   echo: false
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---

```{=html}
<style>
.table-hover > tbody > tr:hover { 
  background-color: #f4f442;
}
</style>
```

```{r message=FALSE, warning=FALSE, include=FALSE}
library(here)
source(here("source","get_lib.R"))
```

Reading CH 2.1, 2.2.1-2.2.4 (page 61- 94)

# Logistic regression

-   In CH1, we first focused on estimating $\pi$
-   Then, $\pi_1$ and $\pi_2$ and independent groups
    -   Briefly talked about `matched pair` case where $\pi_1$ and
        $\pi_2$ are dependent.
-   Now we start talking about many different possible probabilities of
    success to estimate and perform inference upon.

## Functional form

$$\pi_i = \frac{\text{exp}(\beta_0 + \beta_1x_{i,1}+...++ \beta_px_{i,p})}{1+\text{exp}(\beta_0 + \beta_1x_{i,1}+...++ \beta_px_{i,p})}$$

$$\text{logit}(\pi_i)=\text{log}(\frac{\pi_i}{1-\pi_i}) = \beta_0 + \beta_1x_{i,1}+...++ \beta_px_{i,p}$$

-   Unfortunately, there are only a few simple cases where these
    parameter estimates have `closed-form solutions`; i.e., we cannot
    generally write out the parameter estimates in terms of the observed
    data like we could for the single probability estimate $\pi$ in
    Section 1.1.2.

-   Instead, we use iterative numerical procedures, as described in
    Appendix B.3.2, to successively find estimates of the regression
    parameters that increase the log-likelihood function

## parameter estimation in R

```{r}
#| echo: true
#get data
placekick <- read.table(here("data","Placekick.csv"),header = T, sep = ",")

placekick %>% head %>% kable("html") %>% 
  kable_styling(bootstrap_options = c("striped", "hover"))

#fit the model
mod.fit <- glm(formula = good ~ distance , family = binomial(link = logit), data = placekick)

mod.fit

# latex_equation <- extract_eq(mod.fit)
# print(latex_equation)
```

$$
\log\left[ \frac { P( \operatorname{good} = \operatorname{1} ) }{ 1 - P( \operatorname{good} = \operatorname{1} ) } \right] = 5.812 +- 0.115\cdot(\operatorname{distance})
$$

-   You can get confidence interval this way

```{r}
#| echo: true
confint(mod.fit)
```

-   also this way

```{r}
summary(mod.fit)
```

page74

## Hypothesis tests for regression parameters

-   (see page 56)
-   Wald test, which involves calculating $\Z_0$ and using standard
    normal distribution often suffer from bias.
-   LRT typically performs better than the Wald Test

$$H_0: \text{logit}(\pi) =
\log\left[ \frac { P( \operatorname{good} = \operatorname{1} ) }{ 1 - P( \operatorname{good} = \operatorname{1} ) } \right] = \alpha + \beta_{1}\cdot\operatorname{distance}
$$

$$H_A: \text{logit}(\pi) =
\log\left[ \frac { P( \operatorname{good} = \operatorname{1} ) }{ 1 - P( \operatorname{good} = \operatorname{1} ) } \right] = \alpha + \beta_{1}\cdot\operatorname{distance} + \beta_2\cdot\text{another_feature}
$$

### LRT

![](image/LRT.png){fig-align="center" width="400"}

$$\Lambda = \frac{\text{ML under }H_0 }{\text{ML under }H_A}$$

### Transformed LRT

![](image/transformed%20LRT.webp){fig-align="center" width="400"}

$$-2\text{log}{(\Lambda)} \approx \chi^2$$

# Deviance

-   `deviance` refers to the amount that a particular model deviates
    from another model as measured by $-2\text{log}(\Lambda)$.

## Saturated model

-   `saturated model`, which has a different coefficent for each data
    point, leading to perfect prediction, a likelihood of one, and a log
    likelihood of zero.

## Null deviance

-   The `null deviance` measures the performance of the worst model
    using only `an intercept`, providing a benchmark.

$$
\text{Null Deviance}= -2 \text{log}(L(\hat{\beta_0}|y_1,..., y_n))
$$

## Residual deviance

-   The `residual deviance` is the deviance of our fitted model.
-   It is always greater than zero unless it is the saturated model
    which explains the data perfectly.

$$
\text{Residual Deviance}= -2 \text{log}(L(\hat{\beta}|y_1,..., y_n))
$$

-   Therefore, how much better (smaller) our `residual deviance` is
    compared to the `null deviance` and how close it is to zero is a
    measure of model fit.

-   Sometimes people will compute an $R^2$ for logistic regression using
    $1-\frac{\text{Residual Deviance}}{\text{Null Deviance}}$ since it
    is bounded between 0 (residual deviance = null deviance) and 1
    (residual deviance = saturated model = 0).

-   Note that we can compute deviance of two separate models by
    substracting the null model residual deviance and the alternative
    model residual deviance from separate logistic regression fits.

-   See page 81 for more information

```{r}
#| echo: true
mod.fit2 <- glm(formula = good ~ change + distance , family =
binomial(link = logit), data = placekick)

#one at a time test
Anova(mod.fit2, test = "LR")


anova(mod.fit, mod.fit2, test = "LR")

```

# ODDS

-   see page 83, the odd of success at a particular value of `x`

-   The following model can be used to estimate the odd at specific
    value of `x`

$$\text{Odds}_x = \text{exp}(\beta_0 + \beta_1x)$$

-   The following model can be used to estimate the odd at specific
    value of `x + c`

$$\text{Odds}_{x+c} = \text{exp}(\beta_0 + \beta_1(x+c)$$ \## ODD Ratio

$$\text{OR} = \frac{\text{Odds}_{x+c}}{\text{Odds}_{x}}= \text{exp}(c\beta_1)$$ -
Increase in odd is `OR` \> 1, - decrease in odd if `OR` \< 1,

$$\hat{\text{OR}} = \text{exp}(c\hat{\beta}_1)$$ - So, it will have
estimated variance. - As you have guessed by now, Wald CI does not work
well when sample size small.

-   use `transformed LRT` statistic.

```{r}
#| echo: true
#finds LR confidence interval
mod.fit
beta.ci <- confint(mod.fit, parm = "distance", level = 0.95)
beta.ci
```

### understanding the changes in odd

-   `10-yard` decrease in `distance` increases the odds of a successful
    placekick.

```{r}
rev(exp(-10*beta.ci))
```

```{r}
beta.ci <- confint.default(object = mod.fit , parm = "distance",
level = 0.95)

rev(1/exp(beta.ci*10))
```

-   Has similar interval due to large sample size

# Probability

```{r}
linear.pred <- mod.fit$coefficients[1] +
mod.fit$coefficients[2] * 20

#value of the logit function based on given value of distance at 20
linear.pred


new_data <- data.frame(distance = 20)
predict(mod.fit, newdata = new_data, type = "link")

predict(mod.fit, newdata = new_data, type = "response")
```

## confidence interval of the $\pi$ estimate

-   see page 90
-   We can get the $\hat{\pi}$

```{r}
predict(mod.fit, newdata = new_data, type = "response", se = TRUE)
```

```{r}
#create a function to get the confidence interval of pi
ci.pi <- function(newdata , mod.fit.obj , alpha){
  linear.pred <- predict(object = mod.fit.obj , 
                         newdata =newdata , 
                         type = "link", se = TRUE)
  
  CI.lin.pred.lower <- linear.pred$fit - qnorm(p =1-alpha/2)*linear.pred$se
  CI.lin.pred.upper <- linear.pred$fit + qnorm(p =1-alpha/2)*linear.pred$se
  
  #get pi
  CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))
  CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))

  list(lower = CI.pi.lower , upper = CI.pi.upper)
}
```

```{r}
ci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)
```

```{r}
curve(expr = predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response"), col = "red", add = TRUE , xlim = c(18, 66))

curve(expr = ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05) $lower , col = "blue", lty = "dotdash", add = TRUE , xlim = c(18, 66))

curve(expr = ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05) $upper , col = "blue", lty = "dotdash", add = TRUE , xlim = c(18, 66))

legend(locator (1), legend = c("Logistic regression model", "95%
individual C.I."), lty = c("solid", "dotdash"), col = c("red", "blue"), bty = "n")
```

## Interaction

-   

# Log odds to probability

-   Your aunt offers a service in which she weights coins to make them
    unfair.

-   You give her a coin and tell her how much you want the `log-odds` to
    change. She returns the modified coin.

-   For each of the following orders, use your function to compute the
    resulting probability of heads:

    -   fair coin, increase log-odds by 1.
    -   fair coin, increase log-odds by 2.
    -   fair coin, increase log-odds by 10.
    -   fair coin, decrease log-odds by 1.
    -   fair coin, decrease log-odds by 2.
    -   fair coin, decrease log-odds by 10.

-   Write an R function that computes the `probability of heads`, given
    log-odds.

```{r, error = TRUE}
log.odds.to.prob <- function(x){
    p = exp(x)/(1+exp(x))
    return(p)
}

log.odds.to.prob(0)
```

```{r echo=FALSE}
log_odds <- c(10,2,1, 0, -1, -2, -10 )

data.frame(log_odds = log_odds,  probability = round(log.odds.to.prob(log_odds),3)) %>% kable("html") %>% 
  kable_styling(bootstrap_options = c("striped", "hover"))
```

-   In you own words, describe how changes in log-odds translate to
    changes in probability

```{r echo=FALSE}
log_odds_vector = seq(from = -10, to = 10, by = 0.25)
p = log.odds.to.prob(log_odds_vector)
d = data.frame(log_odds_vector, p)
ggplot(d, aes(x = log_odds_vector, y = p)) +
geom_line() +
geom_vline(aes(xintercept = c(-5)), color = "red", linetype = "dashed")+
geom_vline(aes(xintercept = c(5)), color = "red", linetype = "dashed")+
scale_x_continuous(breaks = seq(-10, 10, by = 1)) +
labs(title = "probability versus odds") 

```

-   You can see in this plot, As log-odds increase, the probability of
    success increases relative to the probability of failure, and it
    approaches one. As log-odds decrease probability of success decrease
    and converges to zero.

-   If you get log-odds values that are very very small like -10 the
    probability of success is almost zero, and if you get log-odds
    values that are very big like 10 or the probability of success is
    almost one.

-   The relationship between log-odd and probability is not linear, but
    of s-curve type, and log odds ratios ranging from -5 to +5 create
    probabilities that range from just above 0 to very close to 1.

# Case Study: South African Heart Disease

## Introduction

-   Target: `Probability of getting coronary heart disease`, `chd`
-   Feature:
    -   High blood pressure, high LDL cholesterol, diabetes, smoking,
        secondhand smoke exposure, obesity, an unhealthy diet, and
        physical inactivity are among the leading risk factors for heart
        disease.
-   Data Source: Source: Rousseauw, J., du Plessis, J., Benade, A.,
    Jordaan, P., Kotze, J. and Ferreira, J. (1983). Coronary risk factor
    screening in three rural communities, South African Medical Journal
    64: 430–436.

## Data Description

-   sbp: systolic blood pressure
-   tobacco: cumulative tobacco use (kg)
-   ldl: low density lipoprotein cholesterol ('bad' cholestrol)
-   adiposity: Body adiposity index determines body fat
    percentage(calculated as (HC / (HM)1.5) - 18, where HC = Hip
    Circumference in Centimetres and HM = Height in meters)
-   famhist: family history of heart disease
-   typea: A personality type that could raise one's chances of
    developing coronary heart disease
-   obesity: Body Mass Index (BMI) ($kg/m^2$)
-   alcohol: current alcohol consumption
-   age: age at onset
-   `chd`: coronary heart disease

\newpage

# Exploratory Analysis

For this case study, we focus on blood pressure, smoking, cholesterol,
and age.

-   Load the data and answer the following questions:

    -   What are the number of variables and number of observations?
    -   What is the type of each variable? Do we need to change it?
    -   Are there any missing values (in each of the variables)?
    -   Are there any abnormal values in each of the variables in the
        raw data?

```{r}
df <- SAheart %>%
   dplyr::select(tobacco, ldl, sbp, age, chd, obesity) 

head(df)%>%
   kable("html") %>% 
   kable_styling(bootstrap_options = c("striped", "hover"))

```

## Univariate Analysis

-   The response (or dependent) variable of interest, Heart disease, is
    a binary variable taking the type factor.

-   Use a bar chart to explore the distribution of the response variable
    (chd). What do you learn?

```{r echo=FALSE, warning=FALSE}

df %>%
  count(chd) %>%
  mutate(prop = round(prop.table(n),2)) %>%
  kable(col.names = c('Heart disease', 'N', "Proportion")) %>% 
  kable_styling(bootstrap_options = c("striped", "hover"))


df %>%
  ggplot(aes(x= chd, y = ..prop.., group = 1)) + 
  geom_bar(fill = 'DarkBlue', color = 'black') +
  geom_text(stat='count', aes(label=..count..), vjust=-1) + 
  xlab("Heart disease") +
  ylab("Proportion") +
  scale_y_continuous(label=percent,limits=c(0,1))

```

For metric variables, a density plot or histogram allows us to determine
the shape of the distribution and look for outliers.

-   Use a density plot to explore the distribution of explanatory
    variables. What do you discover?

```{r echo=FALSE, fig.width=10, fig.height=11}

p1 <- df %>% 
  mutate(chd=factor(chd)) %>%
  ggplot(aes(x = age)) +
  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
  ggtitle("Distribution of Subjects' Age") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Age") +
  ylab("Density")


p2 <- df %>% 
  mutate(chd=factor(chd)) %>%
  ggplot(aes(x = ldl)) +
  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
  ggtitle("Distribution of Subjects' bad cholesterol") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Low Density Lipoprotein Cholesterol ") +
  ylab("Density")

p3 <-df %>% 
  mutate(chd=factor(chd)) %>%
  ggplot(aes(x = sbp)) +
  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
  ggtitle("Distribution of Subjects' Blood Pressure") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Systolic Blood Pressure") +
  ylab("Density")

p4 <-df %>% 
  mutate(chd=factor(chd)) %>%
  ggplot(aes(x = tobacco)) +
  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
  ggtitle("Distribution of Subjects' Tobacco usage") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Cumulative Tobacco usage") +
  ylab("Density")

grid.arrange(p1, p2,p3,p4, nrow = 2, ncol = 2)

```

## Bivariate Analysis

-   Prior to moving on to the fully specified model, it is advisable to
    first examine the simple associations between the response and each
    explanatory variable.

-   `Box plots` are useful for exploring the association between a
    categorical variable and a variable measured on an interval scale.

-   Use a `boxplot` to examine how the explanatory variables are
    correlated with the response variable (chd)?

    -   The `coord_flip()` function is used to keep the dependent
        variable on the y-axis.

```{r echo=FALSE, fig.height=11}
p5 <- df %>%
  mutate(chd=factor(chd)) %>%
  ggplot(aes(chd, age)) +
  geom_boxplot(aes(fill = chd)) + 
  coord_flip() +
  ggtitle("Subjects' Age by Heart Disease") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("Age") +
  xlab("Heart Disease") 

p6 <- df %>%
  mutate(chd=factor(chd)) %>%
  ggplot(aes(chd, ldl)) +
  geom_boxplot(aes(fill = chd)) + 
  coord_flip() +
  ggtitle("Subjects' LDL Cholesterol by Heart Disease") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("LDL Cholesterol") +
  xlab(" Heart Disease") 

p7 <- df %>%
  mutate(chd=factor(chd)) %>%
  ggplot(aes(chd, sbp)) +
  geom_boxplot(aes(fill = chd)) + 
  coord_flip() +
  ggtitle("Subjects' Blood Pressure by Heart Disease") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("Systolic Blood Pressure") +
  xlab(" Heart Disease") 

p8 <- df %>%
  mutate(chd=factor(chd)) %>%
  ggplot(aes(chd, tobacco)) +
  geom_boxplot(aes(fill = chd)) + 
  coord_flip() +
  ggtitle(" Tobacco Usage by Heart Disease") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("Tobacco Usage ") +
  xlab(" Heart Disease") 

p5/p6/p7/p8
```

\newpage

-   Use the convenient summary_factorlist() function from the finalfit
    package to tabulate data.

```{r}
dependent <- "chd"
explanatory <- c("ldl","sbp","tobacco","age")

df %>% 
  mutate(chd=as.factor(chd)) %>%
  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE, p = TRUE) %>%
  kable("html") %>% 
   kable_styling(bootstrap_options = c("striped", "hover"))
```

-   According to the plots and the tables, What variable is most
    important for explaining heart disease? How is that variable
    correlated with heart disease?

\newpage

# Model Development

## Linear probability model

-   Is the linear probability model an appropriate choice to study the
    relationship between heart disease and risk factors?

-   Estimate the following linear probability model and interpret the
    model results.

$$ chd = \beta_0 + \beta_1 ldl + \beta_2 sbp + + \beta_3 tobacco + \beta_4 age + u$$

```{r error = TRUE}
#mod.linear <-  # uncomment and replace with your code
mod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)

summary(mod.linear)
```

-   What are the advantages and disadvantages of the linear probability
    model?

```{r}
fitted_values <- data.frame(mod.linear$fitted.values)
 
fitted_values %>%
  ggplot(aes(x= 1:length(mod.linear.fitted.values), y = mod.linear.fitted.values)) +
  geom_line() +
  geom_hline(aes(yintercept = 0), color = "red") +
  geom_hline(aes(yintercept = 1), color = "red")
```

\newpage

## Generalized linear model

-   Estimate the following logistic regression model and interpret the
    model results.

$$ logit(\pi_i) =\beta_0 + \beta_1 ldl + \beta_2 sbp + + \beta_3 tobacco + \beta_4 age +  u$$

```{r ,error = TRUE}
#mod.logit.h0 <-   # uncomment and replace with your code
mod.logit.h0 <- glm(chd ~ ldl + sbp + tobacco + age, family = binomial(link = logit), data = df)

summary(mod.logit.h0)
```

### Interpretation of model results

-   Do the `raw` coefficient estimates `directionally make sense`?

```{r}
# Replace with your code
summary(mod.logit.h0)
```

-   

    > **Again, all of the explanatory variables except blood pressure
    > are statistically significant and positively correlated with the
    > probability of heart disease, same as the linear probability
    > model.**

-   Recall that (page 83)

$$
\text{OR} = \frac{\text{Odds}_{x_k+c}}{\text{Odds}_{x_k}}=exp(c \beta_k)
$$ - The odd of a success change by exp(c$\beta_k$) `times` for every
c-unit increase in x

-   Compute and interpret the estimated odds ratio for a 10-unit
    increase in each explanatory variable.

```{r}
#| echo: true
# Replace with your code
round(exp(10*coef(mod.logit.h0)),2)
```

> **The estimated odds of success or having a heart disease change by
> 6.37 times for every 10-unit increase in LDL or 'bad' cholesterol.**

> **Interestingly, the odds of having a heart disease is almost 1 for
> every 10-unit increase in blood pressure, which means an increase in
> blood pressure doesn't change the odds of having heart disease, and
> it's consistent with its insignificant coefficient.**

# Statistical Inference

## Hypothesis Test

-   Using the likelihood ratio test (LRT) for hypothesis testing is a
    common practice in a logistic regression model.

-   Use LRT to test whether ($obesity$) is associated with heart
    disease.

    -   $H_0: \beta_{obesity} = 0$

    -   $H_a: \beta_{obesity} \ne 0$

Use both *Anova()* or *anova()* functions.

```{r}
#| echo: true
#| 
#mod.logit.ha <- # uncomment and replace with your code
mod.logit.ha <- glm(chd ~ ldl + sbp +tobacco + age + obesity, family = binomial(link = logit), data = df)

#anova()
anova(mod.logit.h0, mod.logit.ha, test = "Chisq")

#Anova()
Anova(mod.logit.ha, test = "LR")
```

## Deviance

-   `deviance` refers to the amount that a particular model deviates
    from another model as measured by $-2\text{log}(\Lambda)$.

-   What are the null deviance and residual deviance in the model
    summary?

    -   For `null` and `residual deviance`, the alternative model we use
        is the `saturated model`, which has a different coefficent for
        each data point, leading to perfect prediction, a likelihood of
        one, and a log likelihood of zero.

-   The `null deviance` measures the performance of the worst model
    using only `an intercept`, providing a benchmark.

$$
\text{Null Deviance}= -2 \text{log}(L(\hat{\beta_0}|y_1,..., y_n))
$$

-   The `residual deviance` is the deviance of our fitted model.
    -   It is always greater than zero unless it is the saturated model
        / explains the data perfectly.

$$
\text{Residual Deviance}= -2 \text{log}(L(\hat{\beta}|y_1,..., y_n))
$$

-   Therefore, how much better (smaller) our residual deviance is
    compared to the null deviance and how close it is to zero is a
    measure of model fit.

-   Sometimes people will compute an $R^2$ for logistic regression using
    $1-\frac{\text{Residual Deviance}}{\text{Null Deviance}}$ since it
    is bounded between 0 (residual deviance = null deviance) and 1
    (residual deviance = saturated model = 0).

-   Note that we can compute deviance of two separate models by
    substracting the null model residual deviance and the alternative
    model residual deviance from separate logistic regression fits. (Why
    is this?)

-   Using deviance, test whether ($obesity$) is associated with heart
    disease.

    -   $H_0: \beta_{obesity} = 0$

    -   $H_a: \beta_{obesity} \ne 0$

```{r message = FALSE ,error = TRUE}
#degree_freedom <- # uncomment and replace with your code
degree_freedom <- mod.logit.h0$df.residual - mod.logit.ha$df.residual

#test_stat <- # uncomment and replace with your code
test_stat <- mod.logit.h0$deviance - mod.logit.ha$deviance

#pvalue <- # uncomment and replace with your code
pvalue <- 1-pchisq(test_stat, df = degree_freedom)
```

> **We get a p-value of 0.29, the same as what we got from both anova()
> and Anova() functions, and again we fail to reject the null hypothesis
> that obesity is not correlated with heart disease given this data
> set.**

## Confidence Interval

### Confidence Interval for odds ratio

**Wald Confidence:**

$$
c*\hat{\beta_k} \pm c*Z_{1-\alpha/2} \sqrt{\widehat{Var}(\hat{\beta}_k)}
$$

$$
exp \left(c*\hat{\beta_k} \pm c*Z_{1-\alpha/2} \sqrt{\widehat{Var}(\hat{\beta}_k)} \right)
$$

-   Calculate Wald CI for odds ratio of 10-unit increase in LDL
    cholesterol based on the above formula:

```{r}
# Replace with your code
vcov(mod.logit.h0)

round(exp(10*mod.logit.h0$coefficients[2] +10*qnorm(p=c(0.025, 0.975))*
            sqrt(vcov(mod.logit.h0)[2,2])),2)
```

> **With 95% confidence, the odds of having a heart disease change
> between 2.20 to 18.4 times for every 10-unit increase in LDL or 'bad'
> cholesterol.**

-   What is the main concern with Wald CI?

> **Wald confidence interval has a true confidence level close to the
> 95% only when we have large samples. When the sample size is not
> large, profile LR confidence intervals generally perform better.**

-   Now calculate the *profile likelihood ratio (LR)* confidence
    interval using the confint function.

```{r}
#| echo: true
# Replace with your code
beta_ci <- confint(mod.logit.h0)

odds_ci <- exp(10*beta_ci)

round(cbind(odds_ci ),2)
```

> **Since we have a large sample, 462 observations, the profile
> likelihood ratio (LR) confidence interval is pretty close to the Wald
> CI.**

### Confidence Interval for the Probability of Success

-   Recall that the estimated probability of success is $$
    \hat{\pi} = \frac{exp \left( \hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_k \right)}{1+exp \left(\hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_k \right)}
    $$

While backing out the estimated probability of success is
straightforward, obtaining its confidence interval is not, as it
involves many parameters.

**Wald Confidence Interval**

$$
\hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_K \pm Z_{1-\alpha/2} \sqrt{\widehat{Var}(\hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_K)} 
$$

where

$$
\widehat{Var}(\hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_K) = \sum_{i=0}^K x_i^2 \widehat{Var}(\hat{\beta_i}) + 2 \sum_{i=0}^{K-1} \sum_{j=i+1}^{K} x_i x_j \widehat{Cov}(\hat{\beta}_i,\hat{\beta}_j)
$$

So, the Wald Interval for $\pi$ is

$$
\frac{exp \left( \hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_k \pm \sqrt{\sum_{i=0}^K x_i^2 \widehat{Var}(\hat{\beta_i}) + 2 \sum_{i=0}^{K-1} \sum_{j=i+1}^{K} x_i x_j \widehat{Cov}(\hat{\beta}_i,\hat{\beta}_j)}  \right)}{1+exp \left(\hat{\beta}_0 + \hat{\beta}_1 x_1 + \dots + \hat{\beta}_K x_k \right)  \pm \sqrt{\sum_{i=0}^K x_i^2 \widehat{Var}(\hat{\beta_i}) + 2 \sum_{i=0}^{K-1} \sum_{j=i+1}^{K} x_i x_j \widehat{Cov}(\hat{\beta}_i,\hat{\beta}_j)}}
$$

-   For an average value of all explanatory variables, compute the
    Confidence Interval for the Probability of Success given the formula
    above

```{r message = FALSE ,error = TRUE}
alpha = 0.5

predict.data <- data.frame(ldl = mean(df$ldl),
                           sbp = mean(df$sbp),
                           tobacco = mean(df$tobacco),
                           age = mean(df$age))
# Obtain the linear predictor
linear.pred = predict(object = mod.logit.h0, newdata = predict.data, type = "link", se = TRUE)

# Then, compute pi.hat
pi.hat = exp(linear.pred$fit)/(1+exp(linear.pred$fit))

# Compute Wald Confidence Interval (in 2 steps)
# Step 1
CI.lin.pred = linear.pred$fit + qnorm(p = c(alpha/2, 1-alpha/2))*linear.pred$se.fit
#CI.lin.pred

# Step 2
CI.pi = exp(CI.lin.pred)/(1+exp(CI.lin.pred))
#CI.pi

# Store all the components in a data frame
#str(predict.data)
round(data.frame(pi.hat, lower=CI.pi[1], upper=CI.pi[2]),4)
```

### Final Visualization

-   Using both the linear probability and logistic regression models,
    plot the estimated probability of heart disease for different values
    of cholesterol, holding other variables constant at their average
    level.

-   Discuss which one can better explain this relationship.

```{r message = FALSE ,error = TRUE}
coef <- mod.logit.h0$coefficients

# Effect of income on LDL for a person's average age, sbp, and tobacco usage

xx = c(1, mean(df$ldl), mean(df$sbp), mean(df$tobacco), mean(df$age))

z = coef[1]*xx[1]+ coef[3]*xx[3] + coef[4]*xx[4] + coef[5]*xx[5]

x <- df$ldl

# Reproduce the graph overlaying the same result from the linear model as a comparison
curve(expr = exp(z + coef[2]*x)/(1+exp(z + coef[2]*x)), 
    xlim = c(min(df$ldl), max(df$ldl)), 
    ylim = c(0,2),
    col = "blue", main = expression(pi == frac(e^{z + coef[inc]*ldl}, 1+e^{z+coef[inc]*ldl})),
      xlab =  expression(cholesterol), ylab = expression(pi))

# par(new=TRUE)


lm.coef <- mod.linear$coefficients
lm.z <- lm.coef[1]*xx[1] + lm.coef[3]*xx[3] + lm.coef[4]*xx[4] + lm.coef[5]*xx[5] 
lines(df$ldl, lm.z + lm.coef[2]*x,col="green")

```

\newpage

### Final Report

-   Display both estimated linear and logistic models in a regression
    table. Is there any significant difference between their results?

```{r message = FALSE ,error = TRUE}
# uncomment and run the code

stargazer(mod.linear, mod.logit.h0, type = "text", omit.stat = "f",
                   star.cutoffs = c(0.05, 0.01, 0.001), title = "Table 1: The estimated relationship between heart disease and  risk factors")


```

> **In both models, all the coefficients except blood pressure are
> statistically significant and positively associated with the
> probability of having heart disease. Also, LDL is the most correlated
> variable with the probability of heart disease in both models.**

# Example

-   In `osteoporosis`, bones become weak and brittle, so weak that even
    bending over or coughing can fracture them. Hip, wrist, and spine
    fractures are the most common osteoporosis-related fractures.

-   All races of people are at risk for osteoporosis.

-   However, white and Asian women, particularly those that are post
    menopause, are at the greatest risk.

-   A healthy diet, weight-bearing exercises, and medications can
    strengthen weak bones or prevent their loss. (Mayo Clinic)

Here, Our goal is description of the data:

-   **How factors such as age and weight are related to the fracture
    rates among older women?**

### Data Description

This sample comes from the Global Longitudinal Study of Osteoporosis in
Women (GLOW).

The data set includes information on 500 subjects enrolled in this
study.

Install and load the aplore3 library to use the glow500 dataset and
understand the structure dataset.

We summarize some of the variables that we will use:

-   PRIORFRAC: History of prior fracture
-   AGE: Age at enrollment
-   WEIGHT: Weight at enrollment (Kilograms)
-   HEIGHT: Height at enrollment (Centimeters)
-   BMI: Body mass index ($kg/m^2$)
-   PREMENO: Menopause before age 45
-   FRACTURE: Any fracture in first year of follow up
-   RATERISK: Self-reported risk of fracture
-   SMOKE: Former or current smoker

```{r}
#| echo: true
df <- glow500 %>%
  dplyr::select(fracture, age, priorfrac, premeno, raterisk, smoke, bmi)


df %>% count(fracture) %>%
  mutate(prop = round(prop.table(n),2)) %>%
  kable(format = "html",col.names = c('Fracture', 'N', "Proportion")) %>% 
  kable_styling(bootstrap_options = c("striped", "hover"))
```

```{r}
df %>%
  ggplot(aes(x= fracture, y = ..prop.., group = 1)) + 
  geom_bar(fill = 'DarkBlue', color = 'black') +
  geom_text(stat='count', aes(label=..count..), vjust=-1) + 
  xlab("Fracture") +
  ylab("Proportion") +
  ylim(0,1)
```

**Age has a higher age in women with fractures than women without
fractures. BMI distributions have almost the same mean and same variance
in both groups with and without fracture, so probably BMI is not a
useful variable to classify these two groups**

```{r}
p1 <- df %>% 
  ggplot(aes(x = age)) +
  geom_density(aes(y = ..density..,color = fracture, fill = fracture),alpha=0.2) +
  ggtitle("Distribution of Subjects' Age") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Yaer") +
  ylab("Density")


p2 <-df %>% 
  ggplot(aes(x = bmi)) +
  geom_density(aes(y = ..density.., color = fracture, fill = fracture),alpha=0.2) +
  ggtitle("Distribution of Subjects'BMI") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  xlab("Body mass index") +
  ylab("Density")

p1/p2
```

```{r}
p3 <- df %>%
 ggplot(aes(fracture, bmi)) +
  geom_boxplot(aes(fill = fracture)) + 
  coord_flip() +
  ggtitle("Subjects' BMI by Fracture in the First Year") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("Body mass index") +
  xlab("Fracture") 

p4 <- df %>%
 ggplot(aes(fracture, age)) +
  geom_boxplot(aes(fill = fracture)) + 
  coord_flip() +
  ggtitle(" Age by Fracture in the First Year") + 
  theme(plot.title = element_text(lineheight=1, face="bold")) +
  ylab("Year") +
  xlab("Fracture") 

p3/p4
```

```{r, fig.height=8,fig.width=8}
p5 <- df %>%
  ggplot(aes(x=priorfrac, 
             y = ..prop.., 
             group = fracture,
             fill = fracture)) + 
  geom_bar( position = 'dodge') +
  geom_text(stat='count', 
            aes(label=..count..), 
            vjust=-1, 
            position = position_dodge(width = 1)) +
  xlab("prior fracture") +
  ylab("Proportion") +
  ylim(0,1) +
  labs(fill = "fracture")


p6 <- df %>%
  ggplot(aes(x=raterisk, 
             y = ..prop.., 
             group = fracture,
             fill = fracture)) + 
  geom_bar( position = 'dodge') +
  geom_text(stat='count', 
            aes(label=..count..), 
            vjust=-1, 
            position = position_dodge(width = 1)) +
  xlab("Self-reported risk of fracture") +
  ylab("Proportion") +
  ylim(0,1) +
  labs(fill = "fracture")


p7 <- df %>%
  ggplot(aes(x= premeno, 
             y = ..prop.., 
             group = fracture,
             fill = fracture)) + 
  geom_bar( position = 'dodge') +
  geom_text(stat='count', 
            aes(label=..count..), 
            vjust=-1, 
            position = position_dodge(width = 1)) +
  xlab("Menopause before age 45") +
  ylab("Proportion") +
  ylim(0,1) +
  labs(fill = "fracture")

p8 <- df %>%
  ggplot(aes(x= smoke, 
             y = ..prop.., 
             group = fracture,
             fill = fracture)) + 
  geom_bar( position = 'dodge') +
  geom_text(stat='count', 
            aes(label=..count..), 
            vjust=-1, 
            position = position_dodge(width = 1)) +
  xlab("Former or current smoker") +
  ylab("Proportion") +
  ylim(0,1) +
  labs(fill = "fracture")

(p5|p6)/(p7|p8)
```


**From these box plots, we can see the women who suffered from a fracture are older, but both groups have the same distribution of BMI.**

**From the plots above, we see that the women with a history of prior fracture, and a high self-reported risk of fracture, have a higher probability of having a fracture in the first year of study. But, smokers and no smokers and women with or without menopause before 45 have the same probability of having a fracture. so smokers and menopause do not help classify these two groups, and we're not going to use them for modeling**


```{r}
dependent <- "fracture"
explanatory <- c("bmi","age", "priorfrac", "premeno", "raterisk", "smoke")

df %>% 
  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE) %>%
  kable("html") %>% 
  kable_styling(bootstrap_options = c("striped", "hover"))
```

## Model development

### simple model 

```{r}
mod.logit.1 <- glm(fracture ~  bmi + age, family = binomial(link = logit), data = df)

## Get the equation in Latex
# latex_equation <- extract_eq(mod.logit.1 )
# print(latex_equation)

summary(mod.logit.1)
```

$$
\log\left[ \frac { P( \operatorname{fracture} = \operatorname{Yes} ) }{ 1 - P( \operatorname{fracture} = \operatorname{Yes} ) } \right] = \alpha + \beta_{1}\cdot\operatorname{bmi} + \beta_{2}\cdot \operatorname{age}
$$

- Recall:

$$
OR = \frac{Odds_{x_k+c}}{Odds_{x_k}}=exp(c \beta_k)
$$

- Find and interpret the estimated odds ratios for a 10-unit increase in age. 


```{r}
round(cbind(exp(10*coef(mod.logit.1)[3])),2)
```

**The estimated odds of having a fracture change by 1.77 times for every 10-year increase in age, or it's 77% higher**

### model with categorical feature

```{r}
levels(df$priorfrac)
levels(df$raterisk)

#set reference levels in factors to make interpretation easier
df$priorfrac<-relevel(df$priorfrac, ref="No")
df$raterisk<-relevel(df$raterisk, ref="Less")

mod.logit.2 <- glm(fracture ~  bmi + age + priorfrac + raterisk, family = binomial(link = logit), data = df)

## Get the equation in Latex
# latex_equation <- extract_eq(mod.logit.2 )
# print(latex_equation)

```

$$
\log\left[ \frac { P( \operatorname{fracture} = \operatorname{Yes} ) }{ 1 - P( \operatorname{fracture} = \operatorname{Yes} ) } \right] = \alpha + \beta_{1}\cdot \operatorname{bmi} + \beta_{2}\cdot \operatorname{age} + \beta_{3}\cdot \operatorname{priorfrac}_{\operatorname{Yes}} + \beta_{4}\cdot \operatorname{raterisk}_{\operatorname{Same}} + \beta_{5}\cdot \operatorname{raterisk}_{\operatorname{Greater}}
$$