{"title":"logit","markdown":{"yaml":{"title":"logit","format":{"html":{"toc":true,"html-math-method":"katex","css":"style.css","theme":{"light":"cosmo","dark":["cosmo","theme-dark.scss"]}}},"execute":{"echo":false},"editor_options":{"chunk_output_type":"console"},"editor":{"markdown":{"wrap":72}}},"headingText":"Generalized linear models (GLM)","containsRefs":false,"markdown":"\n\n```{=html}\n<style>\n.table-hover > tbody > tr:hover { \n  background-color: #f4f442;\n}\n</style>\n```\n\n```{r message=FALSE, warning=FALSE, include=FALSE}\nlibrary(here)\nsource(here(\"source\",\"get_lib.R\"))\n```\n\nReading \nChristopher R. Bilder and Thomas M. Loughin. Analysis of Categorical Data with R. CRC Press. 2015.\n  - CH 2.1, 2.2.1-2.2.4 (page 61- 94)\n  - Ch. 2.2.5 â€“ 2.2.8, 2.3 (page 94)\n  \n  \n-   In CH1, we first focused on estimating $\\pi$\n-   Then, $\\pi_1$ and $\\pi_2$ and independent groups\n    -   Briefly talked about `matched pair` case where $\\pi_1$ and\n        $\\pi_2$ are dependent.\n-   Now we start talking about many different possible probabilities of\n    success to estimate and perform inference upon.\n    \n- Use `odd` to estimate parameters and use `odd ratio` to evaluate the estimated parameters. \n\n\n- GLMs have three different parts (see page 121:\n  \n  1. Random Component:\n      - $Y$, for logistic regression, $Y$ has a Bernoulli distribution\n  \n  2. Systematic Component:\n      - This specifies a linear combination of the regression parameters with `features`, and this part is referred to as the `linear predictor`\n      - $\\beta_0 + \\beta_1x_1 + .... + \\beta_px_p$\n      \n  3. LINK FUNCTION:\n      - Specifies how the expected value of the `random component` $E[Y]$ is linked to the `sysmatic` component.\n      - $\\text{logit}(\\pi) = \\beta_0 + \\beta_1x_1 + .... + \\beta_px_p$\n      - where $E[Y] = \\pi$\n\n\n## Link function \n\n$$\\text{logit}(\\pi_i)=\\text{log}(\\frac{\\pi_i}{1-\\pi_i}) = \\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p}$$\n\n-   Unfortunately, there are only a few simple cases where these\n    parameter estimates have `closed-form solutions`; i.e., we cannot\n    generally write out the parameter estimates in terms of the observed\n    data like we could for the single probability estimate $\\pi$ in\n    Section 1.1.2.\n\n-   Instead, we use iterative numerical procedures, as described in\n    Appendix B.3.2, to successively find estimates of the regression\n    parameters that increase the log-likelihood function\n\n# Parameter estimation in R\n\n```{r}\n#| echo: true\n#get data\nplacekick <- read.table(here(\"data\",\"Placekick.csv\"),header = T, sep = \",\")\n\nplacekick %>% head %>% kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n#fit the model\nmod.fit <- glm(formula = good ~ distance , family = binomial(link = logit), data = placekick)\n\nmod.fit\n\n# latex_equation <- extract_eq(mod.fit)\n# print(latex_equation)\n```\n\n```{text}\nlatex_equation <- extract_eq(mod.fit)\nprint(latex_equation)\n```\n\n## Mod.fit()\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = 5.812 +- 0.115\\cdot(\\operatorname{distance})\n$$\n\n-   You can get confidence interval this way\n\n```{r}\n#| echo: true\nconfint(mod.fit)\n```\n\n-   also this way\n\n```{r}\n#| echo: true\nsummary(mod.fit)\n```\n\npage74\n\n### Hypothesis tests for regression parameters\n\n-   (see page 56)\n-   Wald test, which involves calculating $\\Z_0$ and using standard\n    normal distribution often suffer from bias.\n-   LRT typically performs better than the Wald Test\n\n$$H_0: \\text{logit}(\\pi) =\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{distance}\n$$\n\n\n\n$$H_A: \\text{logit}(\\pi) =\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{distance} + \\beta_2\\cdot\\text{another_feature}\n$$\n\n### LRT\n\n![](image/LRT.png){fig-align=\"center\" width=\"400\"}\n\n$$\\Lambda = \\frac{\\text{ML under }H_0 }{\\text{ML under }H_A}$$\n\n### Transformed LRT\n\n![](image/transformed%20LRT.webp){fig-align=\"center\" width=\"400\"}\n\n$$-2\\text{log}{(\\Lambda)} \\approx \\chi^2$$\n\n# Deviance\n\n-   `deviance` refers to the amount that a particular model deviates\n    from another model as measured by $-2\\text{log}(\\Lambda)$.\n\n## Saturated model\n\n-   `saturated model`, which has a different coefficent for each data\n    point, leading to perfect prediction, a likelihood of one, and a log\n    likelihood of zero.\n\n## Null deviance\n\n-   The `null deviance` measures the performance of the worst model\n    using only `an intercept`, providing a benchmark.\n\n$$\n\\text{Null Deviance}= -2 \\text{log}(L(\\hat{\\beta_0}|y_1,..., y_n))\n$$\n\n## Residual deviance\n\n-   The `residual deviance` is the deviance of our fitted model.\n-   It is always greater than zero unless it is the saturated model\n    which explains the data perfectly.\n\n$$\n\\text{Residual Deviance}= -2 \\text{log}(L(\\hat{\\beta}|y_1,..., y_n))\n$$\n\n-   Therefore, how much better (smaller) our `residual deviance` is\n    compared to the `null deviance` and how close it is to zero is a\n    measure of model fit.\n\n-   Sometimes people will compute an $R^2$ for logistic regression using\n    $1-\\frac{\\text{Residual Deviance}}{\\text{Null Deviance}}$ since it\n    is bounded between 0 (residual deviance = null deviance) and 1\n    (residual deviance = saturated model = 0).\n\n-   Note that we can compute deviance of two separate models by\n    substracting the null model residual deviance and the alternative\n    model residual deviance from separate logistic regression fits.\n\n-   See page 81 for more information\n\n```{r}\n#| echo: true\nmod.fit2 <- glm(formula = good ~ change + distance , family =\nbinomial(link = logit), data = placekick)\n\n#one at a time test\nAnova(mod.fit2, test = \"LR\")\n\n\nanova(mod.fit, mod.fit2, test = \"LR\")\n\n```\n\n# Probability \n\n$$\\pi_i = \\frac{\\text{exp}(\\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p})}{1+\\text{exp}(\\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p})}$$\n\n```{r}\n#| echo: true\nlinear.pred <- mod.fit$coefficients[1] +\nmod.fit$coefficients[2] * 20\n\n#value of the logit function based on given value of distance at 20\nlinear.pred\n\n\nnew_data <- data.frame(distance = 20)\npredict(mod.fit, newdata = new_data, type = \"link\")\n\npredict(mod.fit, newdata = new_data, type = \"response\")\n```\n\n## confidence interval of the $\\pi$ estimate\n\n-   see page 90\n-   We can get the $\\hat{\\pi}$\n\n```{r}\n#| echo: true\npredict(mod.fit, newdata = new_data, type = \"response\", se = TRUE)\n```\n\n```{r}\n#| echo: true\n#create a function to get the confidence interval of pi\nci.pi <- function(newdata , mod.fit.obj , alpha){\n  linear.pred <- predict(object = mod.fit.obj , \n                         newdata =newdata , \n                         type = \"link\", se = TRUE)\n  \n  CI.lin.pred.lower <- linear.pred$fit - qnorm(p =1-alpha/2)*linear.pred$se\n  CI.lin.pred.upper <- linear.pred$fit + qnorm(p =1-alpha/2)*linear.pred$se\n  \n  #get pi\n  CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))\n  CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))\n\n  list(lower = CI.pi.lower , upper = CI.pi.upper)\n}\n```\n\n```{r}\n#| echo: true\nci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)\n```\n\n\n```{r}\n#| echo: true\nx <- 5:70\n\npredicted <- predict(object = mod.fit , newdata =\ndata.frame(distance = x), type = \"response\")\n\nlower <- ci.pi(newdata = data.frame(distance = x),\nmod.fit.obj = mod.fit , alpha = 0.05)$lower\n\nupper <- ci.pi(newdata = data.frame(distance = x),\nmod.fit.obj = mod.fit , alpha = 0.05)$upper\n\ndf <- as.data.frame(cbind(x,lower,upper,predicted)) %>% pivot_longer(-x)\n\np <- df %>% ggplot(aes(x=x,y = value, color = name)) + geom_line()\n\nggplotly(p)\n```\n\n# ODDS\n\n-   see page 83, the odd of success at a particular value of `x`\n\n-   The following model can be used to estimate the odd at specific\n    value of `x`\n\n$$\\text{Odds}_x = \\text{exp}(\\beta_0 + \\beta_1x)$$\n\n-   The following model can be used to estimate the odd at specific\n    value of `x + c`\n\n$$\\text{Odds}_{x+c} = \\text{exp}(\\beta_0 + \\beta_1(x+c)$$ \\\n\n## ODD Ratio\n\n$$\\text{OR} = \\frac{\\text{Odds}_{x+c}}{\\text{Odds}_{x}}= \\text{exp}(c\\beta_1)$$ -\n\n\n- Increase in odd is `OR` \\> 1, \n- decrease in odd if `OR` \\< 1,\n\n$$\\hat{\\text{OR}} = \\text{exp}(c\\hat{\\beta}_1)$$ - So, it will have\nestimated variance. - As you have guessed by now, Wald CI does not work\nwell when sample size small.\n\n-   use `transformed LRT` statistic.\n\n```{r}\n#| echo: true\n#finds LR confidence interval\nmod.fit\nbeta.ci <- confint(mod.fit, parm = \"distance\", level = 0.95)\nbeta.ci\n```\n\n### Understanding the changes in odd\n\n-   `10-yard` decrease in `distance` increases the odds of a successful\n    placekick.\n\n```{r}\nrev(exp(-10*beta.ci))\n```\n\n```{r}\nbeta.ci <- confint.default(object = mod.fit , parm = \"distance\",\nlevel = 0.95)\n\nrev(1/exp(beta.ci*10))\n```\n\n-   Has similar interval due to large sample size\n\n\n### Example of magin coin\n\n-   You can convert log odd to probability \n-   Your aunt offers a service in which she weights coins to make them\n    unfair.\n\n-   You give her a coin and tell her how much you want the `log-odds` to\n    change. \n      - She returns the modified coin.\n\n-   For each of the following orders, use your function to compute the\n    resulting probability of heads:\n\n    -   fair coin, increase log-odds by 1.\n    -   fair coin, increase log-odds by 2.\n    -   fair coin, increase log-odds by 10.\n    -   fair coin, decrease log-odds by 1.\n    -   fair coin, decrease log-odds by 2.\n    -   fair coin, decrease log-odds by 10.\n\n-   Write an R function that computes the `probability of heads`, given\n    log-odds.\n\n```{r, error = TRUE}\nlog.odds.to.prob <- function(x){\n    p = exp(x)/(1+exp(x))\n    return(p)\n}\n\nlog.odds.to.prob(0)\n```\n\n```{r echo=FALSE}\nlog_odds <- c(10,2,1, 0, -1, -2, -10 )\n\ndata.frame(log_odds = log_odds,  probability = round(log.odds.to.prob(log_odds),3)) %>% kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n-   In you own words, describe how changes in log-odds translate to\n    changes in probability\n\n```{r echo=FALSE}\nlog_odds_vector = seq(from = -10, to = 10, by = 0.25)\np = log.odds.to.prob(log_odds_vector)\nd = data.frame(log_odds_vector, p)\nggplot(d, aes(x = log_odds_vector, y = p)) +\ngeom_line() +\ngeom_vline(aes(xintercept = c(-5)), color = \"red\", linetype = \"dashed\")+\ngeom_vline(aes(xintercept = c(5)), color = \"red\", linetype = \"dashed\")+\nscale_x_continuous(breaks = seq(-10, 10, by = 1)) +\nlabs(title = \"probability versus odds\") \n\n```\n\n-   You can see in this plot, As log-odds increase, the probability of\n    success increases relative to the probability of failure, and it\n    approaches one. As log-odds decrease probability of success decrease\n    and converges to zero.\n\n-   If you get log-odds values that are very very small like -10 the\n    probability of success is almost zero, and if you get log-odds\n    values that are very big like 10 or the probability of success is\n    almost one.\n\n-   The relationship between log-odd and probability is not linear, but\n    of s-curve type, and log odds ratios ranging from -5 to +5 create\n    probabilities that range from just above 0 to very close to 1.\n\n# Case Study: South African Heart Disease\n\n## Background\n\n-   Target: `Probability of getting coronary heart disease`, `chd`\n-   Feature:\n    -   High blood pressure, high LDL cholesterol, diabetes, smoking,\n        secondhand smoke exposure, obesity, an unhealthy diet, and\n        physical inactivity are among the leading risk factors for heart\n        disease.\n-   Data Source: Source: Rousseauw, J., du Plessis, J., Benade, A.,\n    Jordaan, P., Kotze, J. and Ferreira, J. (1983). Coronary risk factor\n    screening in three rural communities, South African Medical Journal\n    64: 430â€“436.\n\n- `Data Description`\n  -   sbp: systolic blood pressure\n  -   tobacco: cumulative tobacco use (kg)\n  -   ldl: low density lipoprotein cholesterol ('bad' cholestrol)\n  -   adiposity: Body adiposity index determines body fat\n      percentage(calculated as (HC / (HM)1.5) - 18, where HC = Hip\n      Circumference in Centimetres and HM = Height in meters)\n  -   famhist: family history of heart disease\n  -   typea: A personality type that could raise one's chances of\n      developing coronary heart disease\n  -   obesity: Body Mass Index (BMI) ($kg/m^2$)\n  -   alcohol: current alcohol consumption\n  -   age: age at onset\n  -   `chd`: coronary heart disease  (`target`)\n\n\n## Task\n\n- Using `blood pressure`, `smoking`, `cholesterol`,and `age`.\n\n-   Load the data and answer the following questions:\n\n    -   `What are the number of variables and number of observations?`\n    -   `What is the type of each variable? Do we need to change it?`\n    -   `Are there any missing values (in each of the variables)?`\n    -   `Are there any abnormal values in each of the variables in the\n        raw data?`\n\n```{r}\ndf <- SAheart %>%\n   dplyr::select(tobacco, ldl, sbp, age, chd, obesity) \n\nhead(df)%>%\n   kable(\"html\") %>% \n   kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n```\n\n## EDA\n\n- Univariate analysis \n\n  -   The response (or dependent) variable of interest, Heart disease, is\n      a binary variable taking the type factor.\n  \n  -   Use a bar chart to explore the distribution of the response variable\n      (`chd`). What do you learn?\n\n```{r echo=FALSE, warning=FALSE}\n\ndf %>%\n  count(chd) %>%\n  mutate(prop = round(prop.table(n),2)) %>%\n  kable(col.names = c('Heart disease', 'N', \"Proportion\")) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n\ndf %>%\n  ggplot(aes(x= chd, y = ..prop.., group = 1)) + \n  geom_bar(fill = 'DarkBlue', color = 'black') +\n  geom_text(stat='count', aes(label=..count..), vjust=-1) + \n  xlab(\"Heart disease\") +\n  ylab(\"Proportion\") +\n  scale_y_continuous(label=percent,limits=c(0,1))\n\n```\n\nFor metric variables, a density plot or histogram allows us to determine\nthe shape of the distribution and look for outliers.\n\n-   Use a density plot to explore the distribution of explanatory\n    variables. What do you discover?\n\n```{r echo=FALSE, fig.width=10, fig.height=11}\n\np1 <- df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = age)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Age\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Age\") +\n  ylab(\"Density\")\n\n\np2 <- df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = ldl)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' bad cholesterol\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Low Density Lipoprotein Cholesterol \") +\n  ylab(\"Density\")\n\np3 <-df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = sbp)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Blood Pressure\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Systolic Blood Pressure\") +\n  ylab(\"Density\")\n\np4 <-df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = tobacco)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Tobacco usage\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Cumulative Tobacco usage\") +\n  ylab(\"Density\")\n\ngrid.arrange(p1, p2,p3,p4, nrow = 2, ncol = 2)\n\n```\n\n- `Bivariate Analysis`\n\n  -   Prior to moving on to the fully specified model, it is advisable to\n      first examine the simple associations between the response and each\n      explanatory variable.\n  \n  -   `Box plots` are useful for exploring the association between a\n      categorical variable and a variable measured on an interval scale.\n  \n  -   Use a `boxplot` to examine how the explanatory variables are\n      correlated with the response variable (chd)?\n  \n      -   The `coord_flip()` function is used to keep the dependent\n          variable on the y-axis.\n\n```{r echo=FALSE, fig.height=11}\np5 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, age)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' Age by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Age\") +\n  xlab(\"Heart Disease\") \n\np6 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, ldl)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' LDL Cholesterol by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"LDL Cholesterol\") +\n  xlab(\" Heart Disease\") \n\np7 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, sbp)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' Blood Pressure by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Systolic Blood Pressure\") +\n  xlab(\" Heart Disease\") \n\np8 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, tobacco)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\" Tobacco Usage by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Tobacco Usage \") +\n  xlab(\" Heart Disease\") \n\np5/p6/p7/p8\n```\n\n-   Use the convenient summary_factorlist() function from the finalfit\n    package to tabulate data.\n\n```{r}\ndependent <- \"chd\"\nexplanatory <- c(\"ldl\",\"sbp\",\"tobacco\",\"age\")\n\ndf %>% \n  mutate(chd=as.factor(chd)) %>%\n  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE, p = TRUE) %>%\n  kable(\"html\") %>% \n   kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n-   According to the plots and the tables, What variable is most\n    important for explaining heart disease? How is that variable\n    correlated with heart disease?\n\n\n\n## MRL\n\n\n-   Is the linear probability model an appropriate choice to study the\n    relationship between heart disease and risk factors?\n\n-   Estimate the following linear probability model and interpret the\n    model results.\n\n$$\\text{chd} = \\beta_0 + \\beta_1 \\cdot \\text{ldl} + \\beta_2 \\cdot \\text{sbp} + + \\beta_3 \\cdot \\text{tobacco} + \\beta_4 \\cdot \\text{age} + \\epsilon$$\n\n```{r error = TRUE}\n#mod.linear <-  # uncomment and replace with your code\nmod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)\n\n\n# latex_equation <- extract_eq(mod.linear )\n# print(latex_equation)\n```\n\n$$\n\\operatorname{\\hat{chd}} = -0.35 + 0.036\\cdot\\operatorname{ldl} + 0.00097\\cdot\\operatorname{sbp} + 0.0165 \\cdot\\operatorname{tobacco} + 0.007 \\cdot \\operatorname{age} + \\hat{\\epsilon}\n$$\n\n```{r}\nsummary(mod.linear)\n```\n\n-   What are the advantages and disadvantages of the linear probability\n    model?\n\n```{r}\nfitted_values <- data.frame(mod.linear$fitted.values)\n \nfitted_values %>%\n  ggplot(aes(x= 1:length(mod.linear.fitted.values), y = mod.linear.fitted.values)) +\n  geom_line() +\n  geom_hline(aes(yintercept = 0), color = \"red\") +\n  geom_hline(aes(yintercept = 1), color = \"red\")\n```\n\n\\newpage\n\n## GLM\n\n- Generalized linear model\n- Estimate the following logistic regression model and interpret the model results.\n\n$$ \\text{logit}(\\pi_i) =\\beta_0 + \\beta_1 \\cdot \\text{ldl} + \\beta_2 \\cdot \\text{sbp} + + \\beta_3 \\cdot \\text{tobacco} + \\beta_4 \\cdot \\text{age} +  \\epsilon$$\n\n```{r ,error = TRUE}\n#mod.logit.h0 <-   # uncomment and replace with your code\nmod.logit.h0 <- glm(chd ~ ldl + sbp + tobacco + age, family = binomial(link = logit), data = df)\n\n# latex_equation <- extract_eq(mod.logit.h0 )\n# print(latex_equation)\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{chd} = \\operatorname{1} ) }{ 1 - P( \\operatorname{chd} = \\operatorname{1} ) } \\right] = -4.54 + 0.018\\cdot \\operatorname{ldl} + 0.004\\cdot \\operatorname{sbp} + 0.075\\cdot \\operatorname{tobacco} + 0.04\\cdot \\operatorname{age}\n$$\n\n\n\n### Odd ratio \n\n-   Do the `raw` coefficient estimates `directionally make sense`?\n\n```{r}\n# Replace with your code\nsummary(mod.logit.h0)\n```\n\n-   \n\n    > **Again, all of the explanatory variables except blood pressure\n    > are statistically significant and positively correlated with the\n    > probability of heart disease, same as the linear probability\n    > model.**\n\n-   Recall that (page 83)\n\n$$\n\\text{OR} = \\frac{\\text{Odds}_{x_k+c}}{\\text{Odds}_{x_k}}=exp(c \\beta_k)\n$$ \n\n- The odd of a success change by exp(c$\\beta_k$) `times` for every\nc-unit increase in x\n\n-   Compute and interpret the estimated odds ratio for a 10-unit\n    increase in each explanatory variable.\n\n```{r}\n#| echo: true\n# Replace with your code\nround(exp(10*coef(mod.logit.h0)),2)\n```\n\n> **The estimated odds of success or having a heart disease change by\n> 6.37 times for every 10-unit increase in LDL or 'bad' cholesterol.**\n\n> **Interestingly, the odds of having a heart disease is almost 1 for\n> every 10-unit increase in blood pressure, which means an increase in\n> blood pressure doesn't change the odds of having heart disease, and\n> it's consistent with its insignificant coefficient.**\n\n### Hypothesis Test\n\n-   Using the likelihood ratio test (LRT) for hypothesis testing is a\n    common practice in a logistic regression model.\n\n-   Use LRT to test whether ($obesity$) is associated with heart\n    disease.\n\n    -   $H_0: \\beta_{obesity} = 0$\n\n    -   $H_a: \\beta_{obesity} \\ne 0$\n\nUse both *Anova()* or *anova()* functions.\n\n```{r}\n#| echo: true\n#| \n#mod.logit.ha <- # uncomment and replace with your code\nmod.logit.ha <- glm(chd ~ ldl + sbp +tobacco + age + obesity, family = binomial(link = logit), data = df)\n\n#anova()\nanova(mod.logit.h0, mod.logit.ha, test = \"Chisq\")\n\n#Anova()\nAnova(mod.logit.ha, test = \"LR\")\n```\n\n-   `deviance` refers to the amount that a particular model deviates\n    from another model as measured by $-2\\text{log}(\\Lambda)$.\n\n-   What are the null deviance and residual deviance in the model\n    summary?\n\n    -   For `null` and `residual deviance`, the alternative model we use\n        is the `saturated model`, which has a different coefficent for\n        each data point, leading to perfect prediction, a likelihood of\n        one, and a log likelihood of zero.\n\n-   The `null deviance` measures the performance of the worst model\n    using only `an intercept`, providing a benchmark.\n\n$$\n\\text{Null Deviance}= -2 \\text{log}(L(\\hat{\\beta_0}|y_1,..., y_n))\n$$\n\n-   The `residual deviance` is the deviance of our fitted model.\n    -   It is always greater than zero unless it is the saturated model\n        / explains the data perfectly.\n\n$$\n\\text{Residual Deviance}= -2 \\text{log}(L(\\hat{\\beta}|y_1,..., y_n))\n$$\n\n-   Therefore, how much better (smaller) our residual deviance is\n    compared to the null deviance and how close it is to zero is a\n    measure of model fit.\n\n-   Sometimes people will compute an $R^2$ for logistic regression using\n    $1-\\frac{\\text{Residual Deviance}}{\\text{Null Deviance}}$ since it\n    is bounded between 0 (residual deviance = null deviance) and 1\n    (residual deviance = saturated model = 0).\n\n-   Note that we can compute deviance of two separate models by\n    substracting the null model residual deviance and the alternative\n    model residual deviance from separate logistic regression fits. (Why\n    is this?)\n\n-   Using deviance, test whether ($obesity$) is associated with heart\n    disease.\n\n    -   $H_0: \\beta_{obesity} = 0$\n\n    -   $H_a: \\beta_{obesity} \\ne 0$\n\n```{r message = FALSE ,error = TRUE}\n#degree_freedom <- # uncomment and replace with your code\ndegree_freedom <- mod.logit.h0$df.residual - mod.logit.ha$df.residual\n\n#test_stat <- # uncomment and replace with your code\ntest_stat <- mod.logit.h0$deviance - mod.logit.ha$deviance\n\n#pvalue <- # uncomment and replace with your code\npvalue <- 1-pchisq(test_stat, df = degree_freedom)\n```\n\n> **We get a p-value of 0.29, the same as what we got from both anova()\n> and Anova() functions, and again we fail to reject the null hypothesis\n> that obesity is not correlated with heart disease given this data\n> set.**\n\n### Confidence Interval\n\n- Confidence Interval for `odds ratio`\n\n**Wald Confidence:**\n\n$$\nc*\\hat{\\beta_k} \\pm c*Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_k)}\n$$\n\n$$\nexp \\left(c*\\hat{\\beta_k} \\pm c*Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_k)} \\right)\n$$\n\n-   Calculate Wald CI for odds ratio of 10-unit increase in LDL\n    cholesterol based on the above formula:\n\n```{r}\n# Replace with your code\nvcov(mod.logit.h0)\n\nround(exp(10*mod.logit.h0$coefficients[2] +10*qnorm(p=c(0.025, 0.975))*\n            sqrt(vcov(mod.logit.h0)[2,2])),2)\n```\n\n> **With 95% confidence, the odds of having a heart disease change\n> between 2.20 to 18.4 times for every 10-unit increase in LDL or 'bad'\n> cholesterol.**\n\n-   What is the main concern with Wald CI?\n\n> **Wald confidence interval has a true confidence level close to the\n> 95% only when we have large samples. When the sample size is not\n> large, profile LR confidence intervals generally perform better.**\n\n-   Now calculate the *profile likelihood ratio (LR)* confidence\n    interval using the confint function.\n\n```{r}\n#| echo: true\n# Replace with your code\nbeta_ci <- confint(mod.logit.h0)\n\nodds_ci <- exp(10*beta_ci)\n\nround(cbind(odds_ci ),2)\n```\n\n> **Since we have a large sample, 462 observations, the profile\n> likelihood ratio (LR) confidence interval is pretty close to the Wald\n> CI.**\n\n- `Confidence Interval for the Probability of Success`\n\n-   Recall that the estimated probability of success is $$\n    \\hat{\\pi} = \\frac{exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)}{1+exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)}\n    $$\n\nWhile backing out the estimated probability of success is\nstraightforward, obtaining its confidence interval is not, as it\ninvolves many parameters.\n\n**Wald Confidence Interval**\n\n$$\n\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K \\pm Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K)} \n$$\n\nwhere\n\n$$\n\\widehat{Var}(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K) = \\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)\n$$\n\nSo, the Wald Interval for $\\pi$ is\n\n$$\n\\frac{exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\pm \\sqrt{\\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)}  \\right)}{1+exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)  \\pm \\sqrt{\\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)}}\n$$\n\n-   For an average value of all explanatory variables, compute the\n    Confidence Interval for the Probability of Success given the formula\n    above\n\n```{r message = FALSE ,error = TRUE}\nalpha = 0.5\n\npredict.data <- data.frame(ldl = mean(df$ldl),\n                           sbp = mean(df$sbp),\n                           tobacco = mean(df$tobacco),\n                           age = mean(df$age))\n# Obtain the linear predictor\nlinear.pred = predict(object = mod.logit.h0, newdata = predict.data, type = \"link\", se = TRUE)\n\n# Then, compute pi.hat\npi.hat = exp(linear.pred$fit)/(1+exp(linear.pred$fit))\n\n# Compute Wald Confidence Interval (in 2 steps)\n# Step 1\nCI.lin.pred = linear.pred$fit + qnorm(p = c(alpha/2, 1-alpha/2))*linear.pred$se.fit\n#CI.lin.pred\n\n# Step 2\nCI.pi = exp(CI.lin.pred)/(1+exp(CI.lin.pred))\n#CI.pi\n\n# Store all the components in a data frame\n#str(predict.data)\nround(data.frame(pi.hat, lower=CI.pi[1], upper=CI.pi[2]),4)\n```\n\n## Final Visualization\n\n-   Using both the linear probability and logistic regression models,\n    plot the estimated probability of heart disease for different values\n    of cholesterol, holding other variables constant at their average\n    level.\n\n-   Discuss which one can better explain this relationship.\n\n```{r message = FALSE ,error = TRUE}\ncoef <- mod.logit.h0$coefficients\n\n# Effect of income on LDL for a person's average age, sbp, and tobacco usage\n\nxx = c(1, mean(df$ldl), mean(df$sbp), mean(df$tobacco), mean(df$age))\n\nz = coef[1]*xx[1]+ coef[3]*xx[3] + coef[4]*xx[4] + coef[5]*xx[5]\n\nx <- df$ldl\n\n# Reproduce the graph overlaying the same result from the linear model as a comparison\ncurve(expr = exp(z + coef[2]*x)/(1+exp(z + coef[2]*x)), \n    xlim = c(min(df$ldl), max(df$ldl)), \n    ylim = c(0,2),\n    col = \"blue\", main = expression(pi == frac(e^{z + coef[inc]*ldl}, 1+e^{z+coef[inc]*ldl})),\n      xlab =  expression(cholesterol), ylab = expression(pi))\n\n# par(new=TRUE)\n\n\nlm.coef <- mod.linear$coefficients\nlm.z <- lm.coef[1]*xx[1] + lm.coef[3]*xx[3] + lm.coef[4]*xx[4] + lm.coef[5]*xx[5] \nlines(df$ldl, lm.z + lm.coef[2]*x,col=\"green\")\n\n```\n\n## Final Report\n\n-   Display both estimated linear and logistic models in a regression\n    table. Is there any significant difference between their results?\n\n```{r message = FALSE ,error = TRUE}\n# uncomment and run the code\n\nstargazer(mod.linear, mod.logit.h0, type = \"text\", omit.stat = \"f\",\n                   star.cutoffs = c(0.05, 0.01, 0.001), title = \"Table 1: The estimated relationship between heart disease and  risk factors\")\n\n\n```\n\n> **In both models, all the coefficients except blood pressure are\n> statistically significant and positively associated with the\n> probability of having heart disease. Also, LDL is the most correlated\n> variable with the probability of heart disease in both models.**\n\n# Case Study: osteoporosis\n\n## Background\n\n-   In `osteoporosis`, bones become weak and brittle, so weak that even\n    bending over or coughing can fracture them. Hip, wrist, and spine\n    fractures are the most common osteoporosis-related fractures.\n\n-   All races of people are at risk for osteoporosis.\n\n-   However, white and Asian women, particularly those that are post\n    menopause, are at the greatest risk.\n\n-   A healthy diet, weight-bearing exercises, and medications can\n    strengthen weak bones or prevent their loss. (Mayo Clinic)\n\nHere, Our goal is description of the data:\n\n-   **How factors such as age and weight are related to the fracture\n    rates among older women?**\n\n\nThis sample comes from the Global Longitudinal Study of Osteoporosis in\nWomen (GLOW).\n\nThe data set includes information on 500 subjects enrolled in this\nstudy.\n\nInstall and load the aplore3 library to use the glow500 dataset and\nunderstand the structure dataset.\n\nWe summarize some of the variables that we will use:\n\n-   PRIORFRAC: History of prior fracture\n-   AGE: Age at enrollment\n-   WEIGHT: Weight at enrollment (Kilograms)\n-   HEIGHT: Height at enrollment (Centimeters)\n-   BMI: Body mass index ($kg/m^2$)\n-   PREMENO: Menopause before age 45\n-   `FRACTURE`: Any fracture in first year of follow up (`target`)\n-   RATERISK: Self-reported risk of fracture\n-   SMOKE: Former or current smoker\n\n## Task\n\n- Predict the probability of have a `fracture`\n\n## EDA\n\n```{r}\n#| echo: true\ndf <- glow500 %>%\n  dplyr::select(fracture, age, priorfrac, premeno, raterisk, smoke, bmi)\n\n\ndf %>% count(fracture) %>%\n  mutate(prop = round(prop.table(n),2)) %>%\n  kable(format = \"html\",col.names = c('Fracture', 'N', \"Proportion\")) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n```{r}\ndf %>%\n  ggplot(aes(x= fracture, y = ..prop.., group = 1)) + \n  geom_bar(fill = 'DarkBlue', color = 'black') +\n  geom_text(stat='count', aes(label=..count..), vjust=-1) + \n  xlab(\"Fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1)\n```\n\n**Age has a higher age in women with fractures than women without\nfractures. BMI distributions have almost the same mean and same variance\nin both groups with and without fracture, so probably BMI is not a\nuseful variable to classify these two groups**\n\n```{r}\np1 <- df %>% \n  ggplot(aes(x = age)) +\n  geom_density(aes(y = ..density..,color = fracture, fill = fracture),alpha=0.2) +\n  ggtitle(\"Distribution of Subjects' Age\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Yaer\") +\n  ylab(\"Density\")\n\n\np2 <-df %>% \n  ggplot(aes(x = bmi)) +\n  geom_density(aes(y = ..density.., color = fracture, fill = fracture),alpha=0.2) +\n  ggtitle(\"Distribution of Subjects'BMI\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Body mass index\") +\n  ylab(\"Density\")\n\np1/p2\n```\n\n```{r}\np3 <- df %>%\n ggplot(aes(fracture, bmi)) +\n  geom_boxplot(aes(fill = fracture)) + \n  coord_flip() +\n  ggtitle(\"Subjects' BMI by Fracture in the First Year\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Body mass index\") +\n  xlab(\"Fracture\") \n\np4 <- df %>%\n ggplot(aes(fracture, age)) +\n  geom_boxplot(aes(fill = fracture)) + \n  coord_flip() +\n  ggtitle(\" Age by Fracture in the First Year\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Year\") +\n  xlab(\"Fracture\") \n\np3/p4\n```\n\n```{r, fig.height=8,fig.width=8}\np5 <- df %>%\n  ggplot(aes(x=priorfrac, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"prior fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n\np6 <- df %>%\n  ggplot(aes(x=raterisk, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Self-reported risk of fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n\np7 <- df %>%\n  ggplot(aes(x= premeno, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Menopause before age 45\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\np8 <- df %>%\n  ggplot(aes(x= smoke, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Former or current smoker\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n(p5|p6)/(p7|p8)\n```\n\n\n**From these box plots, we can see the women who suffered from a fracture are older, but both groups have the same distribution of BMI.**\n\n**From the plots above, we see that the women with a history of prior fracture, and a high self-reported risk of fracture, have a higher probability of having a fracture in the first year of study. But, smokers and no smokers and women with or without menopause before 45 have the same probability of having a fracture. so smokers and menopause do not help classify these two groups, and we're not going to use them for modeling**\n\n\n```{r}\ndependent <- \"fracture\"\nexplanatory <- c(\"bmi\",\"age\", \"priorfrac\", \"premeno\", \"raterisk\", \"smoke\")\n\ndf %>% \n  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE) %>%\n  kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n## GLM\n\n### simple model \n\n```{r}\nmod.logit.1 <- glm(fracture ~  bmi + age, family = binomial(link = logit), data = df)\n\n## Get the equation in Latex\n# latex_equation <- extract_eq(mod.logit.1 )\n# print(latex_equation)\n\nsummary(mod.logit.1)\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{fracture} = \\operatorname{Yes} ) }{ 1 - P( \\operatorname{fracture} = \\operatorname{Yes} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{bmi} + \\beta_{2}\\cdot \\operatorname{age}\n$$\n\n- Recall:\n\n$$\nOR = \\frac{Odds_{x_k+c}}{Odds_{x_k}}=exp(c \\beta_k)\n$$\n\n- Find and interpret the estimated odds ratios for a 10-unit increase in age. \n\n\n```{r}\nround(cbind(exp(10*coef(mod.logit.1)[3])),2)\n```\n\n**The estimated odds of having a fracture change by 1.77 times for every 10-year increase in age, or it's 77% higher**\n\n### model with categorical feature\n\n```{r}\nlevels(df$priorfrac)\nlevels(df$raterisk)\n\n#set reference levels in factors to make interpretation easier\ndf$priorfrac<-relevel(df$priorfrac, ref=\"No\")\ndf$raterisk<-relevel(df$raterisk, ref=\"Less\")\n\nmod.logit.2 <- glm(fracture ~  bmi + age + priorfrac + raterisk, family = binomial(link = logit), data = df)\n\n## Get the equation in Latex\n# latex_equation <- extract_eq(mod.logit.2 )\n# print(latex_equation)\n\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{fracture} = \\operatorname{Yes} ) }{ 1 - P( \\operatorname{fracture} = \\operatorname{Yes} ) } \\right] = \\alpha + \\beta_{1}\\cdot \\operatorname{bmi} + \\beta_{2}\\cdot \\operatorname{age} + \\beta_{3}\\cdot \\operatorname{priorfrac}_{\\operatorname{Yes}} + \\beta_{4}\\cdot \\operatorname{raterisk}_{\\operatorname{Same}} + \\beta_{5}\\cdot \\operatorname{raterisk}_{\\operatorname{Greater}}\n$$","srcMarkdownNoYaml":"\n\n```{=html}\n<style>\n.table-hover > tbody > tr:hover { \n  background-color: #f4f442;\n}\n</style>\n```\n\n```{r message=FALSE, warning=FALSE, include=FALSE}\nlibrary(here)\nsource(here(\"source\",\"get_lib.R\"))\n```\n\nReading \nChristopher R. Bilder and Thomas M. Loughin. Analysis of Categorical Data with R. CRC Press. 2015.\n  - CH 2.1, 2.2.1-2.2.4 (page 61- 94)\n  - Ch. 2.2.5 â€“ 2.2.8, 2.3 (page 94)\n  \n  \n-   In CH1, we first focused on estimating $\\pi$\n-   Then, $\\pi_1$ and $\\pi_2$ and independent groups\n    -   Briefly talked about `matched pair` case where $\\pi_1$ and\n        $\\pi_2$ are dependent.\n-   Now we start talking about many different possible probabilities of\n    success to estimate and perform inference upon.\n    \n- Use `odd` to estimate parameters and use `odd ratio` to evaluate the estimated parameters. \n\n# Generalized linear models (GLM)\n\n- GLMs have three different parts (see page 121:\n  \n  1. Random Component:\n      - $Y$, for logistic regression, $Y$ has a Bernoulli distribution\n  \n  2. Systematic Component:\n      - This specifies a linear combination of the regression parameters with `features`, and this part is referred to as the `linear predictor`\n      - $\\beta_0 + \\beta_1x_1 + .... + \\beta_px_p$\n      \n  3. LINK FUNCTION:\n      - Specifies how the expected value of the `random component` $E[Y]$ is linked to the `sysmatic` component.\n      - $\\text{logit}(\\pi) = \\beta_0 + \\beta_1x_1 + .... + \\beta_px_p$\n      - where $E[Y] = \\pi$\n\n\n## Link function \n\n$$\\text{logit}(\\pi_i)=\\text{log}(\\frac{\\pi_i}{1-\\pi_i}) = \\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p}$$\n\n-   Unfortunately, there are only a few simple cases where these\n    parameter estimates have `closed-form solutions`; i.e., we cannot\n    generally write out the parameter estimates in terms of the observed\n    data like we could for the single probability estimate $\\pi$ in\n    Section 1.1.2.\n\n-   Instead, we use iterative numerical procedures, as described in\n    Appendix B.3.2, to successively find estimates of the regression\n    parameters that increase the log-likelihood function\n\n# Parameter estimation in R\n\n```{r}\n#| echo: true\n#get data\nplacekick <- read.table(here(\"data\",\"Placekick.csv\"),header = T, sep = \",\")\n\nplacekick %>% head %>% kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n#fit the model\nmod.fit <- glm(formula = good ~ distance , family = binomial(link = logit), data = placekick)\n\nmod.fit\n\n# latex_equation <- extract_eq(mod.fit)\n# print(latex_equation)\n```\n\n```{text}\nlatex_equation <- extract_eq(mod.fit)\nprint(latex_equation)\n```\n\n## Mod.fit()\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = 5.812 +- 0.115\\cdot(\\operatorname{distance})\n$$\n\n-   You can get confidence interval this way\n\n```{r}\n#| echo: true\nconfint(mod.fit)\n```\n\n-   also this way\n\n```{r}\n#| echo: true\nsummary(mod.fit)\n```\n\npage74\n\n### Hypothesis tests for regression parameters\n\n-   (see page 56)\n-   Wald test, which involves calculating $\\Z_0$ and using standard\n    normal distribution often suffer from bias.\n-   LRT typically performs better than the Wald Test\n\n$$H_0: \\text{logit}(\\pi) =\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{distance}\n$$\n\n\n\n$$H_A: \\text{logit}(\\pi) =\n\\log\\left[ \\frac { P( \\operatorname{good} = \\operatorname{1} ) }{ 1 - P( \\operatorname{good} = \\operatorname{1} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{distance} + \\beta_2\\cdot\\text{another_feature}\n$$\n\n### LRT\n\n![](image/LRT.png){fig-align=\"center\" width=\"400\"}\n\n$$\\Lambda = \\frac{\\text{ML under }H_0 }{\\text{ML under }H_A}$$\n\n### Transformed LRT\n\n![](image/transformed%20LRT.webp){fig-align=\"center\" width=\"400\"}\n\n$$-2\\text{log}{(\\Lambda)} \\approx \\chi^2$$\n\n# Deviance\n\n-   `deviance` refers to the amount that a particular model deviates\n    from another model as measured by $-2\\text{log}(\\Lambda)$.\n\n## Saturated model\n\n-   `saturated model`, which has a different coefficent for each data\n    point, leading to perfect prediction, a likelihood of one, and a log\n    likelihood of zero.\n\n## Null deviance\n\n-   The `null deviance` measures the performance of the worst model\n    using only `an intercept`, providing a benchmark.\n\n$$\n\\text{Null Deviance}= -2 \\text{log}(L(\\hat{\\beta_0}|y_1,..., y_n))\n$$\n\n## Residual deviance\n\n-   The `residual deviance` is the deviance of our fitted model.\n-   It is always greater than zero unless it is the saturated model\n    which explains the data perfectly.\n\n$$\n\\text{Residual Deviance}= -2 \\text{log}(L(\\hat{\\beta}|y_1,..., y_n))\n$$\n\n-   Therefore, how much better (smaller) our `residual deviance` is\n    compared to the `null deviance` and how close it is to zero is a\n    measure of model fit.\n\n-   Sometimes people will compute an $R^2$ for logistic regression using\n    $1-\\frac{\\text{Residual Deviance}}{\\text{Null Deviance}}$ since it\n    is bounded between 0 (residual deviance = null deviance) and 1\n    (residual deviance = saturated model = 0).\n\n-   Note that we can compute deviance of two separate models by\n    substracting the null model residual deviance and the alternative\n    model residual deviance from separate logistic regression fits.\n\n-   See page 81 for more information\n\n```{r}\n#| echo: true\nmod.fit2 <- glm(formula = good ~ change + distance , family =\nbinomial(link = logit), data = placekick)\n\n#one at a time test\nAnova(mod.fit2, test = \"LR\")\n\n\nanova(mod.fit, mod.fit2, test = \"LR\")\n\n```\n\n# Probability \n\n$$\\pi_i = \\frac{\\text{exp}(\\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p})}{1+\\text{exp}(\\beta_0 + \\beta_1x_{i,1}+...++ \\beta_px_{i,p})}$$\n\n```{r}\n#| echo: true\nlinear.pred <- mod.fit$coefficients[1] +\nmod.fit$coefficients[2] * 20\n\n#value of the logit function based on given value of distance at 20\nlinear.pred\n\n\nnew_data <- data.frame(distance = 20)\npredict(mod.fit, newdata = new_data, type = \"link\")\n\npredict(mod.fit, newdata = new_data, type = \"response\")\n```\n\n## confidence interval of the $\\pi$ estimate\n\n-   see page 90\n-   We can get the $\\hat{\\pi}$\n\n```{r}\n#| echo: true\npredict(mod.fit, newdata = new_data, type = \"response\", se = TRUE)\n```\n\n```{r}\n#| echo: true\n#create a function to get the confidence interval of pi\nci.pi <- function(newdata , mod.fit.obj , alpha){\n  linear.pred <- predict(object = mod.fit.obj , \n                         newdata =newdata , \n                         type = \"link\", se = TRUE)\n  \n  CI.lin.pred.lower <- linear.pred$fit - qnorm(p =1-alpha/2)*linear.pred$se\n  CI.lin.pred.upper <- linear.pred$fit + qnorm(p =1-alpha/2)*linear.pred$se\n  \n  #get pi\n  CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))\n  CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))\n\n  list(lower = CI.pi.lower , upper = CI.pi.upper)\n}\n```\n\n```{r}\n#| echo: true\nci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)\n```\n\n\n```{r}\n#| echo: true\nx <- 5:70\n\npredicted <- predict(object = mod.fit , newdata =\ndata.frame(distance = x), type = \"response\")\n\nlower <- ci.pi(newdata = data.frame(distance = x),\nmod.fit.obj = mod.fit , alpha = 0.05)$lower\n\nupper <- ci.pi(newdata = data.frame(distance = x),\nmod.fit.obj = mod.fit , alpha = 0.05)$upper\n\ndf <- as.data.frame(cbind(x,lower,upper,predicted)) %>% pivot_longer(-x)\n\np <- df %>% ggplot(aes(x=x,y = value, color = name)) + geom_line()\n\nggplotly(p)\n```\n\n# ODDS\n\n-   see page 83, the odd of success at a particular value of `x`\n\n-   The following model can be used to estimate the odd at specific\n    value of `x`\n\n$$\\text{Odds}_x = \\text{exp}(\\beta_0 + \\beta_1x)$$\n\n-   The following model can be used to estimate the odd at specific\n    value of `x + c`\n\n$$\\text{Odds}_{x+c} = \\text{exp}(\\beta_0 + \\beta_1(x+c)$$ \\\n\n## ODD Ratio\n\n$$\\text{OR} = \\frac{\\text{Odds}_{x+c}}{\\text{Odds}_{x}}= \\text{exp}(c\\beta_1)$$ -\n\n\n- Increase in odd is `OR` \\> 1, \n- decrease in odd if `OR` \\< 1,\n\n$$\\hat{\\text{OR}} = \\text{exp}(c\\hat{\\beta}_1)$$ - So, it will have\nestimated variance. - As you have guessed by now, Wald CI does not work\nwell when sample size small.\n\n-   use `transformed LRT` statistic.\n\n```{r}\n#| echo: true\n#finds LR confidence interval\nmod.fit\nbeta.ci <- confint(mod.fit, parm = \"distance\", level = 0.95)\nbeta.ci\n```\n\n### Understanding the changes in odd\n\n-   `10-yard` decrease in `distance` increases the odds of a successful\n    placekick.\n\n```{r}\nrev(exp(-10*beta.ci))\n```\n\n```{r}\nbeta.ci <- confint.default(object = mod.fit , parm = \"distance\",\nlevel = 0.95)\n\nrev(1/exp(beta.ci*10))\n```\n\n-   Has similar interval due to large sample size\n\n\n### Example of magin coin\n\n-   You can convert log odd to probability \n-   Your aunt offers a service in which she weights coins to make them\n    unfair.\n\n-   You give her a coin and tell her how much you want the `log-odds` to\n    change. \n      - She returns the modified coin.\n\n-   For each of the following orders, use your function to compute the\n    resulting probability of heads:\n\n    -   fair coin, increase log-odds by 1.\n    -   fair coin, increase log-odds by 2.\n    -   fair coin, increase log-odds by 10.\n    -   fair coin, decrease log-odds by 1.\n    -   fair coin, decrease log-odds by 2.\n    -   fair coin, decrease log-odds by 10.\n\n-   Write an R function that computes the `probability of heads`, given\n    log-odds.\n\n```{r, error = TRUE}\nlog.odds.to.prob <- function(x){\n    p = exp(x)/(1+exp(x))\n    return(p)\n}\n\nlog.odds.to.prob(0)\n```\n\n```{r echo=FALSE}\nlog_odds <- c(10,2,1, 0, -1, -2, -10 )\n\ndata.frame(log_odds = log_odds,  probability = round(log.odds.to.prob(log_odds),3)) %>% kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n-   In you own words, describe how changes in log-odds translate to\n    changes in probability\n\n```{r echo=FALSE}\nlog_odds_vector = seq(from = -10, to = 10, by = 0.25)\np = log.odds.to.prob(log_odds_vector)\nd = data.frame(log_odds_vector, p)\nggplot(d, aes(x = log_odds_vector, y = p)) +\ngeom_line() +\ngeom_vline(aes(xintercept = c(-5)), color = \"red\", linetype = \"dashed\")+\ngeom_vline(aes(xintercept = c(5)), color = \"red\", linetype = \"dashed\")+\nscale_x_continuous(breaks = seq(-10, 10, by = 1)) +\nlabs(title = \"probability versus odds\") \n\n```\n\n-   You can see in this plot, As log-odds increase, the probability of\n    success increases relative to the probability of failure, and it\n    approaches one. As log-odds decrease probability of success decrease\n    and converges to zero.\n\n-   If you get log-odds values that are very very small like -10 the\n    probability of success is almost zero, and if you get log-odds\n    values that are very big like 10 or the probability of success is\n    almost one.\n\n-   The relationship between log-odd and probability is not linear, but\n    of s-curve type, and log odds ratios ranging from -5 to +5 create\n    probabilities that range from just above 0 to very close to 1.\n\n# Case Study: South African Heart Disease\n\n## Background\n\n-   Target: `Probability of getting coronary heart disease`, `chd`\n-   Feature:\n    -   High blood pressure, high LDL cholesterol, diabetes, smoking,\n        secondhand smoke exposure, obesity, an unhealthy diet, and\n        physical inactivity are among the leading risk factors for heart\n        disease.\n-   Data Source: Source: Rousseauw, J., du Plessis, J., Benade, A.,\n    Jordaan, P., Kotze, J. and Ferreira, J. (1983). Coronary risk factor\n    screening in three rural communities, South African Medical Journal\n    64: 430â€“436.\n\n- `Data Description`\n  -   sbp: systolic blood pressure\n  -   tobacco: cumulative tobacco use (kg)\n  -   ldl: low density lipoprotein cholesterol ('bad' cholestrol)\n  -   adiposity: Body adiposity index determines body fat\n      percentage(calculated as (HC / (HM)1.5) - 18, where HC = Hip\n      Circumference in Centimetres and HM = Height in meters)\n  -   famhist: family history of heart disease\n  -   typea: A personality type that could raise one's chances of\n      developing coronary heart disease\n  -   obesity: Body Mass Index (BMI) ($kg/m^2$)\n  -   alcohol: current alcohol consumption\n  -   age: age at onset\n  -   `chd`: coronary heart disease  (`target`)\n\n\n## Task\n\n- Using `blood pressure`, `smoking`, `cholesterol`,and `age`.\n\n-   Load the data and answer the following questions:\n\n    -   `What are the number of variables and number of observations?`\n    -   `What is the type of each variable? Do we need to change it?`\n    -   `Are there any missing values (in each of the variables)?`\n    -   `Are there any abnormal values in each of the variables in the\n        raw data?`\n\n```{r}\ndf <- SAheart %>%\n   dplyr::select(tobacco, ldl, sbp, age, chd, obesity) \n\nhead(df)%>%\n   kable(\"html\") %>% \n   kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n```\n\n## EDA\n\n- Univariate analysis \n\n  -   The response (or dependent) variable of interest, Heart disease, is\n      a binary variable taking the type factor.\n  \n  -   Use a bar chart to explore the distribution of the response variable\n      (`chd`). What do you learn?\n\n```{r echo=FALSE, warning=FALSE}\n\ndf %>%\n  count(chd) %>%\n  mutate(prop = round(prop.table(n),2)) %>%\n  kable(col.names = c('Heart disease', 'N', \"Proportion\")) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n\n\ndf %>%\n  ggplot(aes(x= chd, y = ..prop.., group = 1)) + \n  geom_bar(fill = 'DarkBlue', color = 'black') +\n  geom_text(stat='count', aes(label=..count..), vjust=-1) + \n  xlab(\"Heart disease\") +\n  ylab(\"Proportion\") +\n  scale_y_continuous(label=percent,limits=c(0,1))\n\n```\n\nFor metric variables, a density plot or histogram allows us to determine\nthe shape of the distribution and look for outliers.\n\n-   Use a density plot to explore the distribution of explanatory\n    variables. What do you discover?\n\n```{r echo=FALSE, fig.width=10, fig.height=11}\n\np1 <- df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = age)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Age\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Age\") +\n  ylab(\"Density\")\n\n\np2 <- df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = ldl)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' bad cholesterol\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Low Density Lipoprotein Cholesterol \") +\n  ylab(\"Density\")\n\np3 <-df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = sbp)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Blood Pressure\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Systolic Blood Pressure\") +\n  ylab(\"Density\")\n\np4 <-df %>% \n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(x = tobacco)) +\n  geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +\n  ggtitle(\"Distribution of Subjects' Tobacco usage\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Cumulative Tobacco usage\") +\n  ylab(\"Density\")\n\ngrid.arrange(p1, p2,p3,p4, nrow = 2, ncol = 2)\n\n```\n\n- `Bivariate Analysis`\n\n  -   Prior to moving on to the fully specified model, it is advisable to\n      first examine the simple associations between the response and each\n      explanatory variable.\n  \n  -   `Box plots` are useful for exploring the association between a\n      categorical variable and a variable measured on an interval scale.\n  \n  -   Use a `boxplot` to examine how the explanatory variables are\n      correlated with the response variable (chd)?\n  \n      -   The `coord_flip()` function is used to keep the dependent\n          variable on the y-axis.\n\n```{r echo=FALSE, fig.height=11}\np5 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, age)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' Age by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Age\") +\n  xlab(\"Heart Disease\") \n\np6 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, ldl)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' LDL Cholesterol by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"LDL Cholesterol\") +\n  xlab(\" Heart Disease\") \n\np7 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, sbp)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\"Subjects' Blood Pressure by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Systolic Blood Pressure\") +\n  xlab(\" Heart Disease\") \n\np8 <- df %>%\n  mutate(chd=factor(chd)) %>%\n  ggplot(aes(chd, tobacco)) +\n  geom_boxplot(aes(fill = chd)) + \n  coord_flip() +\n  ggtitle(\" Tobacco Usage by Heart Disease\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Tobacco Usage \") +\n  xlab(\" Heart Disease\") \n\np5/p6/p7/p8\n```\n\n-   Use the convenient summary_factorlist() function from the finalfit\n    package to tabulate data.\n\n```{r}\ndependent <- \"chd\"\nexplanatory <- c(\"ldl\",\"sbp\",\"tobacco\",\"age\")\n\ndf %>% \n  mutate(chd=as.factor(chd)) %>%\n  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE, p = TRUE) %>%\n  kable(\"html\") %>% \n   kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n-   According to the plots and the tables, What variable is most\n    important for explaining heart disease? How is that variable\n    correlated with heart disease?\n\n\n\n## MRL\n\n\n-   Is the linear probability model an appropriate choice to study the\n    relationship between heart disease and risk factors?\n\n-   Estimate the following linear probability model and interpret the\n    model results.\n\n$$\\text{chd} = \\beta_0 + \\beta_1 \\cdot \\text{ldl} + \\beta_2 \\cdot \\text{sbp} + + \\beta_3 \\cdot \\text{tobacco} + \\beta_4 \\cdot \\text{age} + \\epsilon$$\n\n```{r error = TRUE}\n#mod.linear <-  # uncomment and replace with your code\nmod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)\n\n\n# latex_equation <- extract_eq(mod.linear )\n# print(latex_equation)\n```\n\n$$\n\\operatorname{\\hat{chd}} = -0.35 + 0.036\\cdot\\operatorname{ldl} + 0.00097\\cdot\\operatorname{sbp} + 0.0165 \\cdot\\operatorname{tobacco} + 0.007 \\cdot \\operatorname{age} + \\hat{\\epsilon}\n$$\n\n```{r}\nsummary(mod.linear)\n```\n\n-   What are the advantages and disadvantages of the linear probability\n    model?\n\n```{r}\nfitted_values <- data.frame(mod.linear$fitted.values)\n \nfitted_values %>%\n  ggplot(aes(x= 1:length(mod.linear.fitted.values), y = mod.linear.fitted.values)) +\n  geom_line() +\n  geom_hline(aes(yintercept = 0), color = \"red\") +\n  geom_hline(aes(yintercept = 1), color = \"red\")\n```\n\n\\newpage\n\n## GLM\n\n- Generalized linear model\n- Estimate the following logistic regression model and interpret the model results.\n\n$$ \\text{logit}(\\pi_i) =\\beta_0 + \\beta_1 \\cdot \\text{ldl} + \\beta_2 \\cdot \\text{sbp} + + \\beta_3 \\cdot \\text{tobacco} + \\beta_4 \\cdot \\text{age} +  \\epsilon$$\n\n```{r ,error = TRUE}\n#mod.logit.h0 <-   # uncomment and replace with your code\nmod.logit.h0 <- glm(chd ~ ldl + sbp + tobacco + age, family = binomial(link = logit), data = df)\n\n# latex_equation <- extract_eq(mod.logit.h0 )\n# print(latex_equation)\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{chd} = \\operatorname{1} ) }{ 1 - P( \\operatorname{chd} = \\operatorname{1} ) } \\right] = -4.54 + 0.018\\cdot \\operatorname{ldl} + 0.004\\cdot \\operatorname{sbp} + 0.075\\cdot \\operatorname{tobacco} + 0.04\\cdot \\operatorname{age}\n$$\n\n\n\n### Odd ratio \n\n-   Do the `raw` coefficient estimates `directionally make sense`?\n\n```{r}\n# Replace with your code\nsummary(mod.logit.h0)\n```\n\n-   \n\n    > **Again, all of the explanatory variables except blood pressure\n    > are statistically significant and positively correlated with the\n    > probability of heart disease, same as the linear probability\n    > model.**\n\n-   Recall that (page 83)\n\n$$\n\\text{OR} = \\frac{\\text{Odds}_{x_k+c}}{\\text{Odds}_{x_k}}=exp(c \\beta_k)\n$$ \n\n- The odd of a success change by exp(c$\\beta_k$) `times` for every\nc-unit increase in x\n\n-   Compute and interpret the estimated odds ratio for a 10-unit\n    increase in each explanatory variable.\n\n```{r}\n#| echo: true\n# Replace with your code\nround(exp(10*coef(mod.logit.h0)),2)\n```\n\n> **The estimated odds of success or having a heart disease change by\n> 6.37 times for every 10-unit increase in LDL or 'bad' cholesterol.**\n\n> **Interestingly, the odds of having a heart disease is almost 1 for\n> every 10-unit increase in blood pressure, which means an increase in\n> blood pressure doesn't change the odds of having heart disease, and\n> it's consistent with its insignificant coefficient.**\n\n### Hypothesis Test\n\n-   Using the likelihood ratio test (LRT) for hypothesis testing is a\n    common practice in a logistic regression model.\n\n-   Use LRT to test whether ($obesity$) is associated with heart\n    disease.\n\n    -   $H_0: \\beta_{obesity} = 0$\n\n    -   $H_a: \\beta_{obesity} \\ne 0$\n\nUse both *Anova()* or *anova()* functions.\n\n```{r}\n#| echo: true\n#| \n#mod.logit.ha <- # uncomment and replace with your code\nmod.logit.ha <- glm(chd ~ ldl + sbp +tobacco + age + obesity, family = binomial(link = logit), data = df)\n\n#anova()\nanova(mod.logit.h0, mod.logit.ha, test = \"Chisq\")\n\n#Anova()\nAnova(mod.logit.ha, test = \"LR\")\n```\n\n-   `deviance` refers to the amount that a particular model deviates\n    from another model as measured by $-2\\text{log}(\\Lambda)$.\n\n-   What are the null deviance and residual deviance in the model\n    summary?\n\n    -   For `null` and `residual deviance`, the alternative model we use\n        is the `saturated model`, which has a different coefficent for\n        each data point, leading to perfect prediction, a likelihood of\n        one, and a log likelihood of zero.\n\n-   The `null deviance` measures the performance of the worst model\n    using only `an intercept`, providing a benchmark.\n\n$$\n\\text{Null Deviance}= -2 \\text{log}(L(\\hat{\\beta_0}|y_1,..., y_n))\n$$\n\n-   The `residual deviance` is the deviance of our fitted model.\n    -   It is always greater than zero unless it is the saturated model\n        / explains the data perfectly.\n\n$$\n\\text{Residual Deviance}= -2 \\text{log}(L(\\hat{\\beta}|y_1,..., y_n))\n$$\n\n-   Therefore, how much better (smaller) our residual deviance is\n    compared to the null deviance and how close it is to zero is a\n    measure of model fit.\n\n-   Sometimes people will compute an $R^2$ for logistic regression using\n    $1-\\frac{\\text{Residual Deviance}}{\\text{Null Deviance}}$ since it\n    is bounded between 0 (residual deviance = null deviance) and 1\n    (residual deviance = saturated model = 0).\n\n-   Note that we can compute deviance of two separate models by\n    substracting the null model residual deviance and the alternative\n    model residual deviance from separate logistic regression fits. (Why\n    is this?)\n\n-   Using deviance, test whether ($obesity$) is associated with heart\n    disease.\n\n    -   $H_0: \\beta_{obesity} = 0$\n\n    -   $H_a: \\beta_{obesity} \\ne 0$\n\n```{r message = FALSE ,error = TRUE}\n#degree_freedom <- # uncomment and replace with your code\ndegree_freedom <- mod.logit.h0$df.residual - mod.logit.ha$df.residual\n\n#test_stat <- # uncomment and replace with your code\ntest_stat <- mod.logit.h0$deviance - mod.logit.ha$deviance\n\n#pvalue <- # uncomment and replace with your code\npvalue <- 1-pchisq(test_stat, df = degree_freedom)\n```\n\n> **We get a p-value of 0.29, the same as what we got from both anova()\n> and Anova() functions, and again we fail to reject the null hypothesis\n> that obesity is not correlated with heart disease given this data\n> set.**\n\n### Confidence Interval\n\n- Confidence Interval for `odds ratio`\n\n**Wald Confidence:**\n\n$$\nc*\\hat{\\beta_k} \\pm c*Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_k)}\n$$\n\n$$\nexp \\left(c*\\hat{\\beta_k} \\pm c*Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_k)} \\right)\n$$\n\n-   Calculate Wald CI for odds ratio of 10-unit increase in LDL\n    cholesterol based on the above formula:\n\n```{r}\n# Replace with your code\nvcov(mod.logit.h0)\n\nround(exp(10*mod.logit.h0$coefficients[2] +10*qnorm(p=c(0.025, 0.975))*\n            sqrt(vcov(mod.logit.h0)[2,2])),2)\n```\n\n> **With 95% confidence, the odds of having a heart disease change\n> between 2.20 to 18.4 times for every 10-unit increase in LDL or 'bad'\n> cholesterol.**\n\n-   What is the main concern with Wald CI?\n\n> **Wald confidence interval has a true confidence level close to the\n> 95% only when we have large samples. When the sample size is not\n> large, profile LR confidence intervals generally perform better.**\n\n-   Now calculate the *profile likelihood ratio (LR)* confidence\n    interval using the confint function.\n\n```{r}\n#| echo: true\n# Replace with your code\nbeta_ci <- confint(mod.logit.h0)\n\nodds_ci <- exp(10*beta_ci)\n\nround(cbind(odds_ci ),2)\n```\n\n> **Since we have a large sample, 462 observations, the profile\n> likelihood ratio (LR) confidence interval is pretty close to the Wald\n> CI.**\n\n- `Confidence Interval for the Probability of Success`\n\n-   Recall that the estimated probability of success is $$\n    \\hat{\\pi} = \\frac{exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)}{1+exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)}\n    $$\n\nWhile backing out the estimated probability of success is\nstraightforward, obtaining its confidence interval is not, as it\ninvolves many parameters.\n\n**Wald Confidence Interval**\n\n$$\n\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K \\pm Z_{1-\\alpha/2} \\sqrt{\\widehat{Var}(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K)} \n$$\n\nwhere\n\n$$\n\\widehat{Var}(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_K) = \\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)\n$$\n\nSo, the Wald Interval for $\\pi$ is\n\n$$\n\\frac{exp \\left( \\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\pm \\sqrt{\\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)}  \\right)}{1+exp \\left(\\hat{\\beta}_0 + \\hat{\\beta}_1 x_1 + \\dots + \\hat{\\beta}_K x_k \\right)  \\pm \\sqrt{\\sum_{i=0}^K x_i^2 \\widehat{Var}(\\hat{\\beta_i}) + 2 \\sum_{i=0}^{K-1} \\sum_{j=i+1}^{K} x_i x_j \\widehat{Cov}(\\hat{\\beta}_i,\\hat{\\beta}_j)}}\n$$\n\n-   For an average value of all explanatory variables, compute the\n    Confidence Interval for the Probability of Success given the formula\n    above\n\n```{r message = FALSE ,error = TRUE}\nalpha = 0.5\n\npredict.data <- data.frame(ldl = mean(df$ldl),\n                           sbp = mean(df$sbp),\n                           tobacco = mean(df$tobacco),\n                           age = mean(df$age))\n# Obtain the linear predictor\nlinear.pred = predict(object = mod.logit.h0, newdata = predict.data, type = \"link\", se = TRUE)\n\n# Then, compute pi.hat\npi.hat = exp(linear.pred$fit)/(1+exp(linear.pred$fit))\n\n# Compute Wald Confidence Interval (in 2 steps)\n# Step 1\nCI.lin.pred = linear.pred$fit + qnorm(p = c(alpha/2, 1-alpha/2))*linear.pred$se.fit\n#CI.lin.pred\n\n# Step 2\nCI.pi = exp(CI.lin.pred)/(1+exp(CI.lin.pred))\n#CI.pi\n\n# Store all the components in a data frame\n#str(predict.data)\nround(data.frame(pi.hat, lower=CI.pi[1], upper=CI.pi[2]),4)\n```\n\n## Final Visualization\n\n-   Using both the linear probability and logistic regression models,\n    plot the estimated probability of heart disease for different values\n    of cholesterol, holding other variables constant at their average\n    level.\n\n-   Discuss which one can better explain this relationship.\n\n```{r message = FALSE ,error = TRUE}\ncoef <- mod.logit.h0$coefficients\n\n# Effect of income on LDL for a person's average age, sbp, and tobacco usage\n\nxx = c(1, mean(df$ldl), mean(df$sbp), mean(df$tobacco), mean(df$age))\n\nz = coef[1]*xx[1]+ coef[3]*xx[3] + coef[4]*xx[4] + coef[5]*xx[5]\n\nx <- df$ldl\n\n# Reproduce the graph overlaying the same result from the linear model as a comparison\ncurve(expr = exp(z + coef[2]*x)/(1+exp(z + coef[2]*x)), \n    xlim = c(min(df$ldl), max(df$ldl)), \n    ylim = c(0,2),\n    col = \"blue\", main = expression(pi == frac(e^{z + coef[inc]*ldl}, 1+e^{z+coef[inc]*ldl})),\n      xlab =  expression(cholesterol), ylab = expression(pi))\n\n# par(new=TRUE)\n\n\nlm.coef <- mod.linear$coefficients\nlm.z <- lm.coef[1]*xx[1] + lm.coef[3]*xx[3] + lm.coef[4]*xx[4] + lm.coef[5]*xx[5] \nlines(df$ldl, lm.z + lm.coef[2]*x,col=\"green\")\n\n```\n\n## Final Report\n\n-   Display both estimated linear and logistic models in a regression\n    table. Is there any significant difference between their results?\n\n```{r message = FALSE ,error = TRUE}\n# uncomment and run the code\n\nstargazer(mod.linear, mod.logit.h0, type = \"text\", omit.stat = \"f\",\n                   star.cutoffs = c(0.05, 0.01, 0.001), title = \"Table 1: The estimated relationship between heart disease and  risk factors\")\n\n\n```\n\n> **In both models, all the coefficients except blood pressure are\n> statistically significant and positively associated with the\n> probability of having heart disease. Also, LDL is the most correlated\n> variable with the probability of heart disease in both models.**\n\n# Case Study: osteoporosis\n\n## Background\n\n-   In `osteoporosis`, bones become weak and brittle, so weak that even\n    bending over or coughing can fracture them. Hip, wrist, and spine\n    fractures are the most common osteoporosis-related fractures.\n\n-   All races of people are at risk for osteoporosis.\n\n-   However, white and Asian women, particularly those that are post\n    menopause, are at the greatest risk.\n\n-   A healthy diet, weight-bearing exercises, and medications can\n    strengthen weak bones or prevent their loss. (Mayo Clinic)\n\nHere, Our goal is description of the data:\n\n-   **How factors such as age and weight are related to the fracture\n    rates among older women?**\n\n\nThis sample comes from the Global Longitudinal Study of Osteoporosis in\nWomen (GLOW).\n\nThe data set includes information on 500 subjects enrolled in this\nstudy.\n\nInstall and load the aplore3 library to use the glow500 dataset and\nunderstand the structure dataset.\n\nWe summarize some of the variables that we will use:\n\n-   PRIORFRAC: History of prior fracture\n-   AGE: Age at enrollment\n-   WEIGHT: Weight at enrollment (Kilograms)\n-   HEIGHT: Height at enrollment (Centimeters)\n-   BMI: Body mass index ($kg/m^2$)\n-   PREMENO: Menopause before age 45\n-   `FRACTURE`: Any fracture in first year of follow up (`target`)\n-   RATERISK: Self-reported risk of fracture\n-   SMOKE: Former or current smoker\n\n## Task\n\n- Predict the probability of have a `fracture`\n\n## EDA\n\n```{r}\n#| echo: true\ndf <- glow500 %>%\n  dplyr::select(fracture, age, priorfrac, premeno, raterisk, smoke, bmi)\n\n\ndf %>% count(fracture) %>%\n  mutate(prop = round(prop.table(n),2)) %>%\n  kable(format = \"html\",col.names = c('Fracture', 'N', \"Proportion\")) %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n```{r}\ndf %>%\n  ggplot(aes(x= fracture, y = ..prop.., group = 1)) + \n  geom_bar(fill = 'DarkBlue', color = 'black') +\n  geom_text(stat='count', aes(label=..count..), vjust=-1) + \n  xlab(\"Fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1)\n```\n\n**Age has a higher age in women with fractures than women without\nfractures. BMI distributions have almost the same mean and same variance\nin both groups with and without fracture, so probably BMI is not a\nuseful variable to classify these two groups**\n\n```{r}\np1 <- df %>% \n  ggplot(aes(x = age)) +\n  geom_density(aes(y = ..density..,color = fracture, fill = fracture),alpha=0.2) +\n  ggtitle(\"Distribution of Subjects' Age\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Yaer\") +\n  ylab(\"Density\")\n\n\np2 <-df %>% \n  ggplot(aes(x = bmi)) +\n  geom_density(aes(y = ..density.., color = fracture, fill = fracture),alpha=0.2) +\n  ggtitle(\"Distribution of Subjects'BMI\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  xlab(\"Body mass index\") +\n  ylab(\"Density\")\n\np1/p2\n```\n\n```{r}\np3 <- df %>%\n ggplot(aes(fracture, bmi)) +\n  geom_boxplot(aes(fill = fracture)) + \n  coord_flip() +\n  ggtitle(\"Subjects' BMI by Fracture in the First Year\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Body mass index\") +\n  xlab(\"Fracture\") \n\np4 <- df %>%\n ggplot(aes(fracture, age)) +\n  geom_boxplot(aes(fill = fracture)) + \n  coord_flip() +\n  ggtitle(\" Age by Fracture in the First Year\") + \n  theme(plot.title = element_text(lineheight=1, face=\"bold\")) +\n  ylab(\"Year\") +\n  xlab(\"Fracture\") \n\np3/p4\n```\n\n```{r, fig.height=8,fig.width=8}\np5 <- df %>%\n  ggplot(aes(x=priorfrac, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"prior fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n\np6 <- df %>%\n  ggplot(aes(x=raterisk, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Self-reported risk of fracture\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n\np7 <- df %>%\n  ggplot(aes(x= premeno, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Menopause before age 45\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\np8 <- df %>%\n  ggplot(aes(x= smoke, \n             y = ..prop.., \n             group = fracture,\n             fill = fracture)) + \n  geom_bar( position = 'dodge') +\n  geom_text(stat='count', \n            aes(label=..count..), \n            vjust=-1, \n            position = position_dodge(width = 1)) +\n  xlab(\"Former or current smoker\") +\n  ylab(\"Proportion\") +\n  ylim(0,1) +\n  labs(fill = \"fracture\")\n\n(p5|p6)/(p7|p8)\n```\n\n\n**From these box plots, we can see the women who suffered from a fracture are older, but both groups have the same distribution of BMI.**\n\n**From the plots above, we see that the women with a history of prior fracture, and a high self-reported risk of fracture, have a higher probability of having a fracture in the first year of study. But, smokers and no smokers and women with or without menopause before 45 have the same probability of having a fracture. so smokers and menopause do not help classify these two groups, and we're not going to use them for modeling**\n\n\n```{r}\ndependent <- \"fracture\"\nexplanatory <- c(\"bmi\",\"age\", \"priorfrac\", \"premeno\", \"raterisk\", \"smoke\")\n\ndf %>% \n  summary_factorlist(dependent, explanatory, add_dependent_label = TRUE) %>%\n  kable(\"html\") %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n## GLM\n\n### simple model \n\n```{r}\nmod.logit.1 <- glm(fracture ~  bmi + age, family = binomial(link = logit), data = df)\n\n## Get the equation in Latex\n# latex_equation <- extract_eq(mod.logit.1 )\n# print(latex_equation)\n\nsummary(mod.logit.1)\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{fracture} = \\operatorname{Yes} ) }{ 1 - P( \\operatorname{fracture} = \\operatorname{Yes} ) } \\right] = \\alpha + \\beta_{1}\\cdot\\operatorname{bmi} + \\beta_{2}\\cdot \\operatorname{age}\n$$\n\n- Recall:\n\n$$\nOR = \\frac{Odds_{x_k+c}}{Odds_{x_k}}=exp(c \\beta_k)\n$$\n\n- Find and interpret the estimated odds ratios for a 10-unit increase in age. \n\n\n```{r}\nround(cbind(exp(10*coef(mod.logit.1)[3])),2)\n```\n\n**The estimated odds of having a fracture change by 1.77 times for every 10-year increase in age, or it's 77% higher**\n\n### model with categorical feature\n\n```{r}\nlevels(df$priorfrac)\nlevels(df$raterisk)\n\n#set reference levels in factors to make interpretation easier\ndf$priorfrac<-relevel(df$priorfrac, ref=\"No\")\ndf$raterisk<-relevel(df$raterisk, ref=\"Less\")\n\nmod.logit.2 <- glm(fracture ~  bmi + age + priorfrac + raterisk, family = binomial(link = logit), data = df)\n\n## Get the equation in Latex\n# latex_equation <- extract_eq(mod.logit.2 )\n# print(latex_equation)\n\n```\n\n$$\n\\log\\left[ \\frac { P( \\operatorname{fracture} = \\operatorname{Yes} ) }{ 1 - P( \\operatorname{fracture} = \\operatorname{Yes} ) } \\right] = \\alpha + \\beta_{1}\\cdot \\operatorname{bmi} + \\beta_{2}\\cdot \\operatorname{age} + \\beta_{3}\\cdot \\operatorname{priorfrac}_{\\operatorname{Yes}} + \\beta_{4}\\cdot \\operatorname{raterisk}_{\\operatorname{Same}} + \\beta_{5}\\cdot \\operatorname{raterisk}_{\\operatorname{Greater}}\n$$"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"html-math-method":"katex","css":["style.css"],"output-file":"wk2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","title":"logit","editor_options":{"chunk_output_type":"console"},"editor":{"markdown":{"wrap":72}}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}