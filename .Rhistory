CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))
CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))
list(lower = CI.pi.lower , upper = CI.pi.upper)
}
# Chunk 12
ci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)
# Chunk 13
plot(x = w$distance , y = w$good/n$good , xlab = "Distance
(yards)", ylab = "Estimated probability", panel.first = grid(col = "gray", lty = "dotted"))
curve(expr = predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response"), col = "red", add = TRUE , xlim = c(18, 66))
curve(expr = ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05) $lower , col = "blue", lty = "dotdash", add = TRUE , xlim = c(18, 66))
curve(expr = ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05) $upper , col = "blue", lty = "dotdash", add = TRUE , xlim = c(18, 66))
legend(locator (1), legend = c("Logistic regression model", "95%
individual C.I."), lty = c("solid", "dotdash"), col = c("red", "blue"), bty = "n")
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(col.names = c('Fracture', 'N', "Proportion"))
df %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
#| echo: true
df = glow500 %>%
dplyr::select(fracture, age, priorfrac, premeno, raterisk, smoke, bmi)
df
#| echo: true
df <- glow500 %>%
dplyr::select(fracture, age, priorfrac, premeno, raterisk, smoke, bmi)
df
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(col.names = c('Fracture', 'N', "Proportion"))
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(col.names = c('Fracture', 'N', "Proportion")) %>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(col.names = c('Fracture', 'N', "Proportion"), html ) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
data.frame(col.names = c('Fracture', 'N', "Proportion")) %>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
?kable
df %>% count(fracture) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(format = "html",col.names = c('Fracture', 'N', "Proportion")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
df %>%
ggplot(aes(x= fracture, y = ..prop.., group = 1)) +
geom_bar(fill = 'DarkBlue', color = 'black') +
geom_text(stat='count', aes(label=..count..), vjust=-1) +
xlab("Fracture") +
ylab("Proportion") +
ylim(0,1)
p1 <- df %>%
ggplot(aes(x = age)) +
geom_density(aes(y = ..density..,color = fracture, fill = fracture),alpha=0.2) +
ggtitle("Distribution of Subjects' Age") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Yaer") +
ylab("Density")
p2 <-df %>%
ggplot(aes(x = bmi)) +
geom_density(aes(y = ..density.., color = fracture, fill = fracture),alpha=0.2) +
ggtitle("Distribution of Subjects'BMI") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Body mass index") +
ylab("Density")
p1/p2
p3 <- df %>%
ggplot(aes(fracture, bmi)) +
geom_boxplot(aes(fill = fracture)) +
coord_flip() +
ggtitle("Subjects' BMI by Fracture in the First Year") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Body mass index") +
xlab("Fracture")
p4 <- df %>%
ggplot(aes(fracture, age)) +
geom_boxplot(aes(fill = fracture)) +
coord_flip() +
ggtitle(" Age by Fracture in the First Year") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Year") +
xlab("Fracture")
p3/p4
p2 <-df %>%
ggplot(aes(x = bmi)) +
geom_density(aes(y = ..density.., color = fracture, fill = fracture),alpha=0.2) +
ggtitle("Distribution of Subjects'BMI") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Body mass index") +
ylab("Density")
p1/p2
p5 <- df %>%
ggplot(aes(x=priorfrac,
y = ..prop..,
group = fracture,
fill = fracture)) +
geom_bar( position = 'dodge') +
geom_text(stat='count',
aes(label=..count..),
vjust=-1,
position = position_dodge(width = 1)) +
xlab("prior fracture") +
ylab("Proportion") +
ylim(0,1) +
labs(fill = "fracture")
p6 <- df %>%
ggplot(aes(x=raterisk,
y = ..prop..,
group = fracture,
fill = fracture)) +
geom_bar( position = 'dodge') +
geom_text(stat='count',
aes(label=..count..),
vjust=-1,
position = position_dodge(width = 1)) +
xlab("Self-reported risk of fracture") +
ylab("Proportion") +
ylim(0,1) +
labs(fill = "fracture")
p7 <- df %>%
ggplot(aes(x= premeno,
y = ..prop..,
group = fracture,
fill = fracture)) +
geom_bar( position = 'dodge') +
geom_text(stat='count',
aes(label=..count..),
vjust=-1,
position = position_dodge(width = 1)) +
xlab("Menopause before age 45") +
ylab("Proportion") +
ylim(0,1) +
labs(fill = "fracture")
p8 <- df %>%
ggplot(aes(x= smoke,
y = ..prop..,
group = fracture,
fill = fracture)) +
geom_bar( position = 'dodge') +
geom_text(stat='count',
aes(label=..count..),
vjust=-1,
position = position_dodge(width = 1)) +
xlab("Former or current smoker") +
ylab("Proportion") +
ylim(0,1) +
labs(fill = "fracture")
(p5|p6)/(p7|p8)
p3 <- df %>%
ggplot(aes(fracture, bmi)) +
geom_boxplot(aes(fill = fracture)) +
coord_flip() +
ggtitle("Subjects' BMI by Fracture in the First Year") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Body mass index") +
xlab("Fracture")
p4 <- df %>%
ggplot(aes(fracture, age)) +
geom_boxplot(aes(fill = fracture)) +
coord_flip() +
ggtitle(" Age by Fracture in the First Year") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Year") +
xlab("Fracture")
p3/p4
dependent <- "fracture"
explanatory <- c("bmi","age", "priorfrac", "premeno", "raterisk", "smoke")
df %>%
summary_factorlist(dependent, explanatory, add_dependent_label = TRUE) %>%
knitr::kable()
dependent <- "fracture"
explanatory <- c("bmi","age", "priorfrac", "premeno", "raterisk", "smoke")
df %>%
summary_factorlist(dependent, explanatory, add_dependent_label = TRUE) %>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
mod.logit.1 <- glm(fracture ~  bmi + age, family = binomial(link = logit), data = df)
latex_equation <- extract_eq(mod.logit.1 )
print(latex_equation)
summary(mod.logit.1)
print(latex_equation)
mod.logit.2 <- glm(fracture ~  bmi + age + priorfrac + raterisk, family = binomial(link = logit), data = df)
## Get the equation in Latex
latex_equation <- extract_eq(mod.logit.2 )
print(latex_equation)
levels(df$priorfrac)
levels(df$raterisk)
#set reference levels in factors to make interpretation easier
df$priorfrac<-relevel(df$priorfrac, ref="No")
df$raterisk<-relevel(df$raterisk, ref="Less")
predicted <- predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response")
# Chunk 1
library(here)
source(here("source","get_lib.R"))
# Chunk 2
#| echo: true
#get data
placekick <- read.table(here("data","Placekick.csv"),header = T, sep = ",")
placekick %>% head %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
#fit the model
mod.fit <- glm(formula = good ~ distance , family = binomial(link = logit), data = placekick)
mod.fit
# latex_equation <- extract_eq(mod.fit)
# print(latex_equation)
# Chunk 3
#| echo: true
confint(mod.fit)
# Chunk 4
summary(mod.fit)
# Chunk 5
#| echo: true
mod.fit2 <- glm(formula = good ~ change + distance , family =
binomial(link = logit), data = placekick)
#one at a time test
Anova(mod.fit2, test = "LR")
anova(mod.fit, mod.fit2, test = "LR")
# Chunk 6
#| echo: true
#finds LR confidence interval
mod.fit
beta.ci <- confint(mod.fit, parm = "distance", level = 0.95)
beta.ci
# Chunk 7
rev(exp(-10*beta.ci))
# Chunk 8
beta.ci <- confint.default(object = mod.fit , parm = "distance",
level = 0.95)
rev(1/exp(beta.ci*10))
# Chunk 9
linear.pred <- mod.fit$coefficients[1] +
mod.fit$coefficients[2] * 20
#value of the logit function based on given value of distance at 20
linear.pred
new_data <- data.frame(distance = 20)
predict(mod.fit, newdata = new_data, type = "link")
predict(mod.fit, newdata = new_data, type = "response")
# Chunk 10
predict(mod.fit, newdata = new_data, type = "response", se = TRUE)
# Chunk 11
#create a function to get the confidence interval of pi
ci.pi <- function(newdata , mod.fit.obj , alpha){
linear.pred <- predict(object = mod.fit.obj ,
newdata =newdata ,
type = "link", se = TRUE)
CI.lin.pred.lower <- linear.pred$fit - qnorm(p =1-alpha/2)*linear.pred$se
CI.lin.pred.upper <- linear.pred$fit + qnorm(p =1-alpha/2)*linear.pred$se
#get pi
CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))
CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))
list(lower = CI.pi.lower , upper = CI.pi.upper)
}
# Chunk 12
ci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)
predicted <- predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response")
x <- 5:55
x
x <- 5:70
predicted <- predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response")
predicted
ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05)
predicted <- predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response")
lower <- ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05)$lower
upper <- ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05)$upper
df <- cbind(lower,upper,predicted)
df
df <- cbind(x,lower,upper,predicted)
df <- cbind(x,lower,upper,predicted) %>% pivot_longer(-x)
df <- as.data.frame(cbind(x,lower,upper,predicted)) %>% pivot_longer(-x)
df
df %>% ggplot(aes(x=x,y = value, color = name)) + geom_point()
df %>% ggplot(aes(x=x,y = value, color = name)) + geom_line()
#| echo: true
OR.hat <- c.table[1,1] * c.table[2,2] / (c.table[2,1] *
c.table[1,2])
#mod.linear <-  # uncomment and replace with your code
mod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)
# Chunk 1
library(here)
source(here("source","get_lib.R"))
# Chunk 2
#| echo: true
#get data
placekick <- read.table(here("data","Placekick.csv"),header = T, sep = ",")
placekick %>% head %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
#fit the model
mod.fit <- glm(formula = good ~ distance , family = binomial(link = logit), data = placekick)
mod.fit
# latex_equation <- extract_eq(mod.fit)
# print(latex_equation)
# Chunk 4
#| echo: true
confint(mod.fit)
# Chunk 5
#| echo: true
summary(mod.fit)
# Chunk 6
#| echo: true
mod.fit2 <- glm(formula = good ~ change + distance , family =
binomial(link = logit), data = placekick)
#one at a time test
Anova(mod.fit2, test = "LR")
anova(mod.fit, mod.fit2, test = "LR")
# Chunk 7
#| echo: true
linear.pred <- mod.fit$coefficients[1] +
mod.fit$coefficients[2] * 20
#value of the logit function based on given value of distance at 20
linear.pred
new_data <- data.frame(distance = 20)
predict(mod.fit, newdata = new_data, type = "link")
predict(mod.fit, newdata = new_data, type = "response")
# Chunk 8
#| echo: true
predict(mod.fit, newdata = new_data, type = "response", se = TRUE)
# Chunk 9
#| echo: true
#create a function to get the confidence interval of pi
ci.pi <- function(newdata , mod.fit.obj , alpha){
linear.pred <- predict(object = mod.fit.obj ,
newdata =newdata ,
type = "link", se = TRUE)
CI.lin.pred.lower <- linear.pred$fit - qnorm(p =1-alpha/2)*linear.pred$se
CI.lin.pred.upper <- linear.pred$fit + qnorm(p =1-alpha/2)*linear.pred$se
#get pi
CI.pi.lower <- exp(CI.lin.pred.lower) / (1 +exp(CI.lin.pred.lower))
CI.pi.upper <- exp(CI.lin.pred.upper) / (1 +exp(CI.lin.pred.upper))
list(lower = CI.pi.lower , upper = CI.pi.upper)
}
# Chunk 10
#| echo: true
ci.pi(newdata = data.frame(distance = 20), mod.fit.obj = mod.fit , alpha = 0.05)
# Chunk 11
#| echo: true
x <- 5:70
predicted <- predict(object = mod.fit , newdata =
data.frame(distance = x), type = "response")
lower <- ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05)$lower
upper <- ci.pi(newdata = data.frame(distance = x),
mod.fit.obj = mod.fit , alpha = 0.05)$upper
df <- as.data.frame(cbind(x,lower,upper,predicted)) %>% pivot_longer(-x)
p <- df %>% ggplot(aes(x=x,y = value, color = name)) + geom_line()
ggplotly(p)
# Chunk 12
#| echo: true
#finds LR confidence interval
mod.fit
beta.ci <- confint(mod.fit, parm = "distance", level = 0.95)
beta.ci
# Chunk 13
rev(exp(-10*beta.ci))
# Chunk 14
beta.ci <- confint.default(object = mod.fit , parm = "distance",
level = 0.95)
rev(1/exp(beta.ci*10))
# Chunk 15
log.odds.to.prob <- function(x){
p = exp(x)/(1+exp(x))
return(p)
}
log.odds.to.prob(0)
# Chunk 16
log_odds <- c(10,2,1, 0, -1, -2, -10 )
data.frame(log_odds = log_odds,  probability = round(log.odds.to.prob(log_odds),3)) %>% kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# Chunk 17
log_odds_vector = seq(from = -10, to = 10, by = 0.25)
p = log.odds.to.prob(log_odds_vector)
d = data.frame(log_odds_vector, p)
ggplot(d, aes(x = log_odds_vector, y = p)) +
geom_line() +
geom_vline(aes(xintercept = c(-5)), color = "red", linetype = "dashed")+
geom_vline(aes(xintercept = c(5)), color = "red", linetype = "dashed")+
scale_x_continuous(breaks = seq(-10, 10, by = 1)) +
labs(title = "probability versus odds")
# Chunk 18
df <- SAheart %>%
dplyr::select(tobacco, ldl, sbp, age, chd, obesity)
head(df)%>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
# Chunk 19
df %>%
count(chd) %>%
mutate(prop = round(prop.table(n),2)) %>%
kable(col.names = c('Heart disease', 'N', "Proportion")) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
df %>%
ggplot(aes(x= chd, y = ..prop.., group = 1)) +
geom_bar(fill = 'DarkBlue', color = 'black') +
geom_text(stat='count', aes(label=..count..), vjust=-1) +
xlab("Heart disease") +
ylab("Proportion") +
scale_y_continuous(label=percent,limits=c(0,1))
# Chunk 20
p1 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(x = age)) +
geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
ggtitle("Distribution of Subjects' Age") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Age") +
ylab("Density")
p2 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(x = ldl)) +
geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
ggtitle("Distribution of Subjects' bad cholesterol") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Low Density Lipoprotein Cholesterol ") +
ylab("Density")
p3 <-df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(x = sbp)) +
geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
ggtitle("Distribution of Subjects' Blood Pressure") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Systolic Blood Pressure") +
ylab("Density")
p4 <-df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(x = tobacco)) +
geom_density(aes(y = ..density..,  color = chd, fill = chd), alpha = 0.2) +
ggtitle("Distribution of Subjects' Tobacco usage") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
xlab("Cumulative Tobacco usage") +
ylab("Density")
grid.arrange(p1, p2,p3,p4, nrow = 2, ncol = 2)
# Chunk 21
p5 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(chd, age)) +
geom_boxplot(aes(fill = chd)) +
coord_flip() +
ggtitle("Subjects' Age by Heart Disease") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Age") +
xlab("Heart Disease")
p6 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(chd, ldl)) +
geom_boxplot(aes(fill = chd)) +
coord_flip() +
ggtitle("Subjects' LDL Cholesterol by Heart Disease") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("LDL Cholesterol") +
xlab(" Heart Disease")
p7 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(chd, sbp)) +
geom_boxplot(aes(fill = chd)) +
coord_flip() +
ggtitle("Subjects' Blood Pressure by Heart Disease") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Systolic Blood Pressure") +
xlab(" Heart Disease")
p8 <- df %>%
mutate(chd=factor(chd)) %>%
ggplot(aes(chd, tobacco)) +
geom_boxplot(aes(fill = chd)) +
coord_flip() +
ggtitle(" Tobacco Usage by Heart Disease") +
theme(plot.title = element_text(lineheight=1, face="bold")) +
ylab("Tobacco Usage ") +
xlab(" Heart Disease")
p5/p6/p7/p8
# Chunk 22
dependent <- "chd"
explanatory <- c("ldl","sbp","tobacco","age")
df %>%
mutate(chd=as.factor(chd)) %>%
summary_factorlist(dependent, explanatory, add_dependent_label = TRUE, p = TRUE) %>%
kable("html") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
#mod.linear <-  # uncomment and replace with your code
mod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)
latex_equation <- extract_eq(mod.linear )
print(latex_equation)
latex_equation <- extract_eq(mod.linear )
print(latex_equation)
#mod.linear <-  # uncomment and replace with your code
mod.linear <- lm(chd ~ ldl + sbp + tobacco + age, data = df)
summary(mod.linear)
summary(mod.linear)
fitted_values <- data.frame(mod.linear$fitted.values)
fitted_values %>%
ggplot(aes(x= 1:length(mod.linear.fitted.values), y = mod.linear.fitted.values)) +
geom_line() +
geom_hline(aes(yintercept = 0), color = "red") +
geom_hline(aes(yintercept = 1), color = "red")
#mod.logit.h0 <-   # uncomment and replace with your code
mod.logit.h0 <- glm(chd ~ ldl + sbp + tobacco + age, family = binomial(link = logit), data = df)
latex_equation <- extract_eq(mod.logit.h0 )
print(latex_equation)
summary(mod.logit.h0)
